[
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "resources",
    "section": "",
    "text": "It’s finally time for an upgraded notebook! I’ve been Slacking myself (and subsequently burying) links to resources for far too long, so my favorites will now live here."
  },
  {
    "objectID": "resources.html#learning-materials",
    "href": "resources.html#learning-materials",
    "title": "resources",
    "section": " learning materials",
    "text": "learning materials\n\nEver feel like you need a pick-me-up while learning stats or a new R tool? Look no further than Allison Horst’s Data Science Illustrations, featuring the cutest and most educational fuzzy monsters you’ll ever see!\nMastering Shiny, by Hadley Wickham\nHappy Git and GitHub for the useR, by Jenny Bryan\nR for Data Science, by Hadley Wickham\nHitchhiker’s Guide to Python, by Kenneth Reitz & Tanya Schlusser\nData wrangling essentials: comparisons in JavaScript, Python, SQL, R, and Excel, by Allison Horst & Paul Buffa\nW3Schools, particularly for their HTML & CSS tutorials"
  },
  {
    "objectID": "resources.html#data-viz",
    "href": "resources.html#data-viz",
    "title": "resources",
    "section": " data viz",
    "text": "data viz\n\nfrom Data to Viz, a choose-your-adventure-type experience for creating your best data visualizations\nFundamentals of Data Visualization, by Claus O. Wilke\nThe Sessions College Color Calculator, for creating color palettes\nBeautifully Annotated: Enhancing your ggplots with Text, by Cara Thompson, a seriously wonderful talk on using annotations in your ggplots"
  },
  {
    "objectID": "resources.html#r-tools",
    "href": "resources.html#r-tools",
    "title": "resources",
    "section": " r tools",
    "text": "r tools\n\nfree icons from fontawesome + the {fontawesome} R package for infusing your slides, website, RMarkdowns/Quarto Markdowns, and more with an extra splash of fun"
  },
  {
    "objectID": "resources.html#reporting-presentations",
    "href": "resources.html#reporting-presentations",
    "title": "resources",
    "section": " reporting & presentations",
    "text": "reporting & presentations\n\nQuarto is all the rage these days (and by these days, I mean post-March 2022). Download and find some great tutorials here to get started\nMeet xaringan: Making slides in R Markdown, by Allison Hill\nSharing Your xaringan Slides, by Garrick Aden-Buie"
  },
  {
    "objectID": "resources.html#data-science-communities",
    "href": "resources.html#data-science-communities",
    "title": "resources",
    "section": " data science communities",
    "text": "data science communities\nWhile these groups are primarily based in SoCal/Santa Barbara, there are tons of awesome groups like these all over the world. Google around to see what’s near you!\n\nR-Ladies Santa Barbara and R-Ladies Global, which work to promote gender diversity in the R community\nEcoDataScience, an environmental data science study group at UCSB\n\nSouthern California R Users, an alliance of R user groups in Southern California\n\nSanta Barbara Women in STEM, while not specifically data science-focused, this group holds some really great career and networking events, panels, flash talks, and more"
  },
  {
    "objectID": "resources.html#web-accessibility",
    "href": "resources.html#web-accessibility",
    "title": "resources",
    "section": " web accessibility",
    "text": "web accessibility\n\nThe A11Y Project is a community-driven effort to make digital content more accessible. I still have a long way to go in making my own website WCAG compliant – the A11Y Project not only has a ton of great blog posts, but also WCAG compliance checklist that I will definitely be returning to over and over again.\nCoblis, a color blindness simulator – just upload a file and view your color palettes as they would appear under different types of color deficiencies"
  },
  {
    "objectID": "resources.html#misc.",
    "href": "resources.html#misc.",
    "title": "resources",
    "section": " misc.",
    "text": "misc.\n\nDiscover new music to jam out to while you hack at Every Noise at Once (HT: Jeanette Clark)"
  },
  {
    "objectID": "courses/eds-296-ds-portfolios/index.html",
    "href": "courses/eds-296-ds-portfolios/index.html",
    "title": "EDS 296-1F - Data science tools for building professional online portfolios",
    "section": "",
    "text": "course website  course catalog\n\n\nCourse description\nHaving a polished online presence is essential for showcasing your skills, projects, expertise, and (importantly) your personality. Learners, collaborators, and future employers alike will look to your public online profiles to glean information about you and your work. As data scientists, this often means that they’ll head to one of two places: GitHub and / or your personal website. This course is designed to help you both lay the foundation for creating and maintaining these profiles in an organized, informative, and visually-appealing way. Over the next several weeks, you will:\n\nbuild and deploy your personal website using popular data science tools and frameworks\ncreate your first (of many!) data science blog posts\nlearn about how best to communicate your work to different audiences\nunderstand where and how to document your projects and code\nand more!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhen is this taught?\nI’m super excited to offer this new course starting Fall 2024 (so if you’ve stumbled across this here now, you’ll find some very-much-in-progress materials). I’ve taught components of this as separate non-credit-bearing workshops since 2022:\n\nCreating your personal website using Quarto\nCustomizing Quarto websites\nAdding a blog to your existing Quarto website\n\nThe full course will include these, with an additional focus on GitHub as a professional portfolio."
  },
  {
    "objectID": "courses/eds-240-data-viz/index.html",
    "href": "courses/eds-240-data-viz/index.html",
    "title": "EDS 240 - Data Visualization & Communication",
    "section": "",
    "text": "course website  course catalog\n\n\nCourse description\nEffectively communicating your work in a responsible, accessible and visually-pleasing way is often (if not, always) a central part of data science. This course will focus on the basic principles for effective communication through data visualization and using technical tools and workflows for creating and sharing data visualizations with diverse audiences.\nBy the end of this course, learners should be able to:\n\nIdentify which types of visualizations are most appropriate for your data and your audience\nPrepare (e.g. clean, explore, wrangle) data so that it’s appropriately formatted for building data visualizations\nBuild effective, responsible, accessible, and aesthetically-pleasing, visualizations using the R programming language, and specifically {ggplot2} + ggplot2 extension packages\nWrite code from scratch and read and adapt code written by others\nApply a DEI (Diversity, Equity & Inclusion) lens to the process of designing data visualizations\nAssess, critique, and provide constructive feedback on data visualizations\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhen is this taught?\nEDS 240 is a core course of the Master of Environmental Data Science (MEDS) program, taught in Winter quarter each year (since the inaugural cohort, Winter 2022). I had so much fun redesigning and teaching it for the first time in Winter 2024, and I reflect on my experiences in my blog post, Buiding (and teaching) a graduate-level data science course!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sam Shanny-Csik",
    "section": "",
    "text": "Hi there! I’m Sam Shanny-Csik (pronounced “shan-knee chick”). Professionally, I love teaching data science skills, learning and implementing inclusive pedagogical approaches, and the communities that support both of those things. Outside of work, I’m an avid hiker, novice (but passionate) meal-maker, and I really love the color green. Poke around to learn more about me and my work!"
  },
  {
    "objectID": "talks_workshops.html",
    "href": "talks_workshops.html",
    "title": "talks & workshops",
    "section": "",
    "text": "Quarto for documenting Ocean Health Index (OHI) methods\n\n\n\nNCEAS\n\n\nOcean-Health-Index\n\n\nR\n\n\nQuarto\n\n\n\nstep-by-step instructions for building, deploying, and customizing a Quarto website to organize, house, and better share OHI methodology\n\n\n\nSamantha Csik\n\n\nMay 17, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJust enough CSS (and Sass) for data scientists\n\n\n\nNCEAS\n\n\nQuarto\n\n\nCSS\n\n\n\na hands-on workshop for data scientists looking to add a little pizzazz to their web pages\n\n\n\nSamantha Csik\n\n\nAug 3, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntegrating JavaScript Libraries into R for Dynamic Visualizations\n\n\n\nSORTEE\n\n\nR\n\n\nJavaScript\n\n\ndata-visualization\n\n\n\na live-coding workshop on building interactive data visualizations, given as part of the SORTEE webinar series\n\n\n\nSamantha Csik, An Bui\n\n\nMay 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAn iterative approach to streamlining analytical workflows using functions and for loops\n\n\n\nMEDS\n\n\nR\n\n\nfunctions\n\n\nfor-loops\n\n\n\na workshop with the goal of making function and for loop writing less daunting\n\n\n\nSamantha Csik\n\n\nApr 14, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOne workflow for building effective (and pretty) {ggplot2} data visualizations\n\n\n\nMEDS\n\n\nR\n\n\nggplot2\n\n\ndata-visualization\n\n\n\na workshop on iteratively building ggplots\n\n\n\nSamantha Csik\n\n\nMar 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a blog to your existing Quarto website\n\n\n\nMEDS\n\n\nQuarto\n\n\nblogging\n\n\n\ngot a Quarto website, but no blog? we can fix that!\n\n\n\nSamantha Csik\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustomizing Quarto Websites\n\n\n\nMEDS\n\n\nR\n\n\nQuarto\n\n\nCSS\n\n\n\nmake your website stand out using Sass & CSS\n\n\n\nSamantha Csik\n\n\nOct 10, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreating your personal website using Quarto\n\n\n\nMEDS\n\n\nR\n\n\nQuarto\n\n\n\nstep-by-step instructions for building & deploying a Quarto website\n\n\n\nSamantha Csik\n\n\nAug 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAn Intro to Cloud Computing\n\n\n\nMEDS\n\n\nAWS\n\n\n\nan interactive workshop on how to launch an Amazon EC2 instance\n\n\n\nSamantha Csik\n\n\nApr 18, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRStudio Tips & Tricks\n\n\n\nMEDS\n\n\nR\n\n\n\na schedule of RStudio IDE tips & tricks and other keyboard shortcuts\n\n\n\nSamantha Csik\n\n\nNov 15, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTeach Me How to Google\n\n\n\nMEDS\n\n\n\na talk on how to troubleshoot code and Google for helpful answers\n\n\n\nSamantha Csik\n\n\nOct 11, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntro to the {tidyverse}\n\n\n\nR-Ladies\n\n\n\na code-along workshop to learn data wrangling and visualization techniques using {tidyverse} functions\n\n\n\nSamantha Csik, An Bui\n\n\nMay 15, 2019\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/2023-02-15-bren-student-data-explorer/index.html",
    "href": "projects/2023-02-15-bren-student-data-explorer/index.html",
    "title": "Bren Student Data Explorer",
    "section": "",
    "text": "shiny dashboard  source code\n\nIn an effort to increase transparency surrounding student demographics and post-graduation career placement statistics, The Bren School hired R Shiny Developer Fellow, Halina Do-Linh in summer 2022. Halina designed and built v1.0 of the public-facing dashboard for exploring these data.\nSince then, the proverbial torch was passed to me for continued maintenance and updates. I collaborate with the Bren Admissions and Career Services Teams, as well as MEDS Program Coordinator, Jamie Montgomery, to update data, modify visuals, and refactor the code, as needed, each year.\n\n\n\nThe welcome page of the Bren Student Data Explorer, accessible at https://shinyapps.bren.ucsb.edu/student-data-explorer/"
  },
  {
    "objectID": "talks_workshops/2023-03-16-ggplot2/index.html",
    "href": "talks_workshops/2023-03-16-ggplot2/index.html",
    "title": "One workflow for building effective (and pretty) {ggplot2} data visualizations",
    "section": "",
    "text": "Art by Allison Horst\n\n\n\n materials  source code\n\n\nAbstract\n{ggplot2} has, in many ways, become the de facto tool for data visualization in R. And with the many extension packages available, there’s hardly a limit to what you can create. Building effective and visually-pleasing data visualizations is a skill that gets easier with practice, and following a somewhat structured workflow – at least at the start – can help you get there faster. This workshop covers one approach for doing so, though you’ll find what works best for you with time.\n\n\nAudience\nThis workshop was originally developed for the Master of Environmental Data Science (MEDS) program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis."
  },
  {
    "objectID": "talks_workshops/2023-05-23-js-in-r/index.html",
    "href": "talks_workshops/2023-05-23-js-in-r/index.html",
    "title": "Integrating JavaScript Libraries into R for Dynamic Visualizations",
    "section": "",
    "text": "An interactive map made with the {leaflet} R package.\n\n\n\n materials  source code\n\n\nAbstract\nJavaScript, a programming language used to create dynamic web page content, is becoming an increasingly popular data science tool for building interactive data visualizations. However, learning an entirely new programming language can be time prohibitive and unrealistic for many researchers. Lucky for R users, there’s an app (well, R packages) for that!\nIn this hands-on live-coding workshop, we’ll explore the {DT}, {plotly}, and {leaflet} packages, which make JavaScript libraries more accessible for R-users looking to infuse their static visualizations with interactivity. Together, we’ll build an interactive table, plot, and map, and demonstrate how these outputs can be shared using open data science communication tools, like RMarkdown and Quarto.\n\n\nAudience\nThis workshop was developed for and taught during the SORTEE Workshops and Webinar series."
  },
  {
    "objectID": "talks_workshops/2021-10-11-teach-me-how-to-google/index.html",
    "href": "talks_workshops/2021-10-11-teach-me-how-to-google/index.html",
    "title": "Teach Me How to Google",
    "section": "",
    "text": "slides  source code\n\n\nAbstract\nGoogling for code help is something that all data scientists (at all career stages) do. But figuring out how to get the information you need back can be incredibly challenging, particularly for new coders. In this workshop, we’ll discuss strategies for refining your queries to increase your chances of finding informative solutions.\n\n\nAudience\nThis talk was originally developed for the Master of Environmental Data Science (MEDS) program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis.\nIt’s since been adapted for a number of non-MEDS audiences, including students from UCSB’s Master of Technology Management Program (Jan 2022), R-Ladies St. Louis (Feb 2022), The Brown School StatLab at the University of Washington in St. Louis (Mar 2022), undergraduate students in UCSB’s Environmental Studies Program (Nov 2022 & 2023), and UCSB’s Data Analysis and Coding Club (DAnC) (May 2023). Most times, the slides remain unchanged (aside from an updated title slide), but there are minor differences here and there depending on audience needs/experiences. Find all additional talk versions here!"
  },
  {
    "objectID": "talks_workshops/2021-11-15-ide-tips-tricks/index.html",
    "href": "talks_workshops/2021-11-15-ide-tips-tricks/index.html",
    "title": "RStudio Tips & Tricks",
    "section": "",
    "text": "It became clear after two cohorts of students that delivering tons of shortcut all at once (in the form of an hour-long workshop; see slide deck, below) was not particularly helpful or effective (learners aren’t given sufficient time to practice and build muscle memory). We tried out something new in summer 2023, and instead presented a few “Keyboard Shortcuts of the Week” throughout the 6-week long MEDS summer session. Overall, I think this was a much needed change to content delivery! You can read more about the format and shortcuts list on this wiki.\n\n\n\n\n\n\n\n slides  source code\n\n\nAbstract\nAs environmental data scientists, we spend a lot of time in RStudio. Taking some time to learn how you can customize your RStudio IDE (Integrated Development Environment) and the keyboard shortcuts used to navigate around that IDE can make you a more efficient (and happier) hacker!\n\n\nAudience\nThese materials were originally developed for the Master of Environmental Data Science (MEDS) program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis."
  },
  {
    "objectID": "talks_workshops/2024-05-17-OHI-quarto-websites/index.html",
    "href": "talks_workshops/2024-05-17-OHI-quarto-websites/index.html",
    "title": "Quarto for documenting Ocean Health Index (OHI) methods",
    "section": "",
    "text": "materials  source code\n\n\nAbstract\nThis workshop is meant to introduce Quarto as a tool and framework for building websites. It has been tailored (from it’s previous version) to serve Ocean Health Index (OHI) fellows in building websites to organize, house, and better share OHI methodology. We walk through the steps of creating the essential building blocks of any Quarto website, configuring website navigation menus, deploying a website (for free) using GitHub Pages, using Sass to update website fonts and colors, and a few other helpful tips and tricks.\n\n\nAudience\nThis workshop was delivered to the 2024 Ocean Health Index fellows, a group of three early-career data scientists who work to calculate the latest OHI scores and improve workflows and methodology (among other exciting and innovative work). They are based at the National Center for Ecological Analysis and Synthesis from May - September.\n\n\n\n\nCitationBibTeX citation:@online{csik2024,\n  author = {Csik, Samantha},\n  title = {Quarto for Documenting {Ocean} {Health} {Index} {(OHI)}\n    Methods},\n  date = {2024-05-17},\n  url = {https://samanthacsik.github.io/talks/2024-05-17-OHI-quarto-websites/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nCsik, Samantha. 2024. “Quarto for Documenting Ocean Health Index\n(OHI) Methods.” May 17, 2024. https://samanthacsik.github.io/talks/2024-05-17-OHI-quarto-websites/."
  },
  {
    "objectID": "talks_workshops/2022-08-05-creating-your-personal-website-using-quarto/index.html",
    "href": "talks_workshops/2022-08-05-creating-your-personal-website-using-quarto/index.html",
    "title": "Creating your personal website using Quarto",
    "section": "",
    "text": "Art by Allison Horst\n\n\n\n materials  source code\n\n\nAbstract\nA personal website is not only a great way to showcase your experiences and skills, but also gives people (potential employers included!) a better sense of who you are as a person. There are lots of great tools for building websites using R (e.g. {distill}, {blogdown}) – this year, we’ll be using Quarto, an exciting, new, and versatile publishing tool that supports R, Python, Julia, and ObservableJS. Want to get started on building your own website using Quarto? Check out this tutorial.\n\n\nAudience\nThis workshop was originally developed for the Master of Environmental Data Science (MEDS) program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis.\n\n\n\n\nCitationBibTeX citation:@online{csik2022,\n  author = {Csik, Samantha},\n  title = {Creating Your Personal Website Using {Quarto}},\n  date = {2022-08-05},\n  url = {https://samanthacsik.github.io/talks/2022-08-05-creating-your-personal-website-using-quarto/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nCsik, Samantha. 2022. “Creating Your Personal Website Using\nQuarto.” August 5, 2022. https://samanthacsik.github.io/talks/2022-08-05-creating-your-personal-website-using-quarto/."
  },
  {
    "objectID": "posts/2021-09-21-distill-blogs/index.html",
    "href": "posts/2021-09-21-distill-blogs/index.html",
    "title": "Why create presentation slides about blogging when you can just blog about it instead?",
    "section": "",
    "text": "I am a total blog newb.\nBUT we all have to start somewhere. And my somewhere is leading a mini-workshop in T-6 days for our first Master of Environmental Data Science (MEDS) cohort (read more about this new program) on why blogging as data scientists is an important and valuable skill to practice, what a good blog post might look like, and some of the technical aspects of creating blog posts using the {distill} package.\nI originally set off on my self-education journey by digging into other data science-related blogs and throwing together some slides about what I found. I even practiced creating a fake blog post on my own (and very much still under development) personal website in case anyone asked me to walk them through the steps (I can’t look like I don’t know what I’m doing now, right??).\nTen slides deep and then it struck me – I was creating a presentation on how to blog without ever actually creating my own blog post?? Dammit. Doesn’t quite feel right. So here we are. Baby’s first blog post ~about blog posts~. I’d say this first post is half meant to serve our MEDS students as they embark on their fall quarter (and will surely be asked to blog every now and again) and half meant to be the catalyst I so desperately needed to finally put a little bit of writing out there in the data science world.\nSo here we go! I’ll start by sharing examples of different blogs that I think demonstrate a few creative ways to format and publish data science content. Then I’ll review some of the cool things you can do with {distill} to customize your own beautiful posts."
  },
  {
    "objectID": "posts/2021-09-21-distill-blogs/index.html#i.-why-blog",
    "href": "posts/2021-09-21-distill-blogs/index.html#i.-why-blog",
    "title": "Why create presentation slides about blogging when you can just blog about it instead?",
    "section": "I. Why blog?",
    "text": "I. Why blog?\nData science blogging has become pretty darn popular in recent years, and for good reason. It can help you to build your online professional profile, enhance your communication skills, stay atop the latest and greatest trends and tools, connect with other data scientists, and even solicit feedback from those in the community.\nBut arguably one of the most valuable reasons to blog is to get a whole lot better at doing whatever it is you want to write about. You’ve probably heard some version of the saying, “The best way to learn something is to teach it to others” – not only do I find this to be true of myself, but there’s also science1 to back this up!\nStill, getting started can be a bit intimidating (I’m only doing this for the first time now myself). It an attempt to make it a little less so for the next blogger-to-be, I have tried to gather some ideas, instructions, and inspiration to get things going. If nothing else, I think heeding the advice of this tweet2 is a pretty good place to start:\n\n\nWhen you’ve written the same code 3 times, write a functionWhen you’ve given the same in-person advice 3 times, write a blog post\n\n— David Robinson ((drob?)) November 9, 2017"
  },
  {
    "objectID": "posts/2021-09-21-distill-blogs/index.html#ii.-structuring-data-science-blog-posts",
    "href": "posts/2021-09-21-distill-blogs/index.html#ii.-structuring-data-science-blog-posts",
    "title": "Why create presentation slides about blogging when you can just blog about it instead?",
    "section": "II. Structuring data science blog posts",
    "text": "II. Structuring data science blog posts\nThere are lots of creative ways to blog (both for yourself and your target audience) about your data science journey. Here are just a few examples3 that caught my eye.\n\ni. Make a tutorial for yourself (and others)\nMeghan Hall shares an intro tutorial on using the {cowplot} package for arranging plots, including code snippets and resulting outputs in her post, An Introduction to Cowplot (Hall 2021).\n\n\n\n\n\n\n\n\nii. Compare popular tools to new alternatives\nHarry Fisher (Data, Code & Coffee) explores {nakedpipe} a new(er) alternative to {magrittr}’s %&gt;% in his blog post, Penguins and nakedpipes (Fisher 2020).\n\n\n\n\n\n\niii. Describe how to use a tool and when it’s appropriate to do so\nEric Ekholm covers how to use the {ggtext} package to replace your use of ggplot legends with colored title text in his post, Improving ggplots with Text Color (EE (2021)). Importantly, he discusses when it might be most appropriate to do so and when you might opt for an alternative method.\n\n\n\n\n\n\niv. Hold yourself accountable to a coding challenge (and teach others along the way!)\nElla Kaye documents her progress through the 2020 Advent of Code, a series of small coding challenges, released daily through December in her post Advent of Code, 2020 (Kaye 2020).\n\n\n\n\n\n\nv. Share what you learned at a conference\nDanielle Brantley (Data Sci Dani) recaps her experiences at R Conference 2020 and provides brief overviews of the R packages she learned about along the way in her post, Packages I Learned about at R Conference NYC (Brantley 2020).\n\n\n\n\n\n\nvi. Present a coding problem and solution\nKaija Gahm (woodpeckeR) defines a coding problem, provides some context, and describes her solution along with why it works in her post, %$%: upping your pipe game (Gahm 2021).\n\n\n\n\n\n\nvii. Share how you use code as a creative medium\nIjeamaka Anyene is a computational aRtist who shares her process of creating abstract geometrical rectangular designs (check out her ‘Subdivisions Series’ on her Etsy shop) in her post, So, you want to subdivide a rectangle (Anyene 2021).\n\n\n\n\n\n\nviii. Document the evolution of your code in multiple posts\nMatt Kerlogue (The Lapsed Geographer) details his use of the {pdftools} and tidyverse packages in R to web scrape and wrangle COVID-19 data from UK reports in his post, Scraping Google’s COVID-19 mobility report PDFs (Kerlogue 2020b). He later follows up with instructions on how to automate this process for reports from ~130 countries and all 50 US states in his post, Automating the COVID-19 PDF scraping (Kerlogue 2020a).\n\n\n\n\nNow that we’re all feeling inspired to flex our creative data science muscles, let’s create and customize our own blog posts Blog"
  },
  {
    "objectID": "posts/2021-09-21-distill-blogs/index.html#iii.-adding-a-distill-blog-to-your-personal-website",
    "href": "posts/2021-09-21-distill-blogs/index.html#iii.-adding-a-distill-blog-to-your-personal-website",
    "title": "Why create presentation slides about blogging when you can just blog about it instead?",
    "section": "III. Adding a distill blog to your personal website",
    "text": "III. Adding a distill blog to your personal website\nDisclaimer: A lot of the following content (sections III & IV) is just a compilation of excellent existing resources. I learn by repeating things (usually many times), so taking the time to type out code/YAML headers has been helpful, albeit not at all novel. See a list of referenced resources at the bottom of this post.\nIf you have not yet made a distill site, there are many great tutorials out there. For MEDS students, I recommend following along with these step-by-step instructions by Allison Horst before moving forward. For a very brief intro on customizing your distill site using CSS, check out these slides.\n\nNote: The following section was adapted from Hill (2020)\n\nNow that you have your distill site up and running, you can create your first blog post by running the distill::create_post() function in your console:\n\ncreate_post(title = \"My blog post\")\n\nIf this is the first time you are creating a blog post, {distill} will add a directory called _posts/, which will contain this plus all future blog posts. You will also need to create a listing page, which will list all of your posts. Do this by adding a blank .Rmd file to your root directory by running utils::file.edit(\"blog.Rmd\") in your console, then add a YAML header to your new file as follows:\n\n---\ntitle: \"Blog\"  # any name you want\nlisting: posts # do this exactly\n---\n\nFinally, link your new listing page to your website’s navbar by editing _site.yml. Note: Since I named my listing .Rmd file as blog.Rmd, the href I need to link to is blog.html.\n\nnavbar:\n  right:\n    - text: \"Home\"\n      href: index.html\n    - text: \"Blog\"      # add \n      href: blog.html   # add"
  },
  {
    "objectID": "posts/2021-09-21-distill-blogs/index.html#iv.-customizing-your-distill-blog-posts",
    "href": "posts/2021-09-21-distill-blogs/index.html#iv.-customizing-your-distill-blog-posts",
    "title": "Why create presentation slides about blogging when you can just blog about it instead?",
    "section": "IV. Customizing your distill blog & posts",
    "text": "IV. Customizing your distill blog & posts\nA couple simple touches can go a long way in improving the look of your distill blog. Here are some of the steps I followed to customize my first blog post.\n\nNote: This section’s content was largely adapted from Allaire et al. (2018)\n\n\ni. Preview images\nPreview images are those fun little thumbnails that appear alongside blog posts on your listing page:\n\n\n\n\n\n\n\n\n\nAdd your image to the folder where your blog post .Rmd lives (e.g. _posts -&gt; YYYY-MM-DD-my-blog-post -&gt; my_preview_image.jpeg). Then, add the preview field to the YAML header of your blog post .Rmd file and set the value to the name of your preview image:\n\n---\ntitle: \"my blog post\"\n# (additional metadata excluded for brevity)\npreview: my_preview_image.jpeg  # your preview image\n---\n\n\n\nii. Categories\nYou can assign each post to one or more “categories,” making it easier for your readers to filter content. Do so by adding the categories field to the YAML header of your blog post .Rmd file, then list whichever self-defined categories you would like your post to be assigned to. For example, I assigned this blog post to two catetories: distill and R:\n\n---\ntitle: \"Why create slides about blogging when you can just blog about it instead?\"\n# (additional metadata excluded for brevity)\ncategories:\n  - distill # list as many categories as you'd like \n  - R \n---\n\nTake a look at your listing page to see all your categories (and how many articles are assigned to each). Assigned categories will also appear as metadata at the top of each post.\n\n\niii. Table of contents\nTable of contents can be helpful for readers to navigate longer posts. Add the toc (and optionally, toc_float) field to your blog’s YAML header as shown below:\n\n---\ntitle: \"my blog post\"\n# (additional metadata excluded for brevity)\noutput:\n  distill::distill_article:\n    self_contained: false\n    toc: true              # add a table of contents\n    toc_float: true        # float it (positioned on the left-hand side, rather at the top)\n---\n\n\n\niv. Citations\nYou can add automatically-generated citations to the bottom of your posts, making it easier for readers to reference your work.\nI did this by first adding the base_url field to my _site.yml and set the value to the landing page URL of my distill site. For example:\n\n---\nname: \"samanthacsik.github.io\"\ntitle: \"Samantha Csik\"\n# (additional metadata excluded for brevity)\nbase_url: samanthacsik.github.io # add your website's landing page url\n---\n\nI then specified the slug (the unique identifying part of a web address) in the YAML header of my blog post .Rmd file (a slug will be automatically generated if not provided):\n\n---\ntitle: \"Why create slides about blogging when you can just blog about it instead?\"\n# (additional metadata excluded for brevity)\nslug: csik2021firstBlog\n---\n\nYour citations will now appear as metadata at the bottom of your post upon knitting.\n\n\nv. Bibliographies\nYou can use standard R Markdown bibliographies to cite works throughout your post and include a corresponding “References” list. You will first need to create a .bib file in the folder containing your blog post. You can do so by running the file.edit() function in your console. For example:\n\nfile.edit(\"_posts/YYYY-MM-DD-my-blog-post/bibliography.bib\")\n\nNext, add the bibliograhy field to the YAML header of your blog post .Rmd file and set the value to the name of your new .bib file:\n\n---\ntitle: \"my blog post\"\n# (additional metadata excluded for brevity)\nbibliography: bibliography.bib\n---\n\nNow, add citation information to your .bib file. This is super easy if you are citing a distill article that has citation information already included – just copy and paste! Note: there are different formats (e.g. CSL or BibTeX) for creating bibliography files. I chose to use BibTeX.\nFor example, Allaire et al. (2018) includes the following BibTeX citation at the end of their post, which I have copied into my .bib file:\n\n@misc{allaire2018distill,\n  author = {Allaire, JJ and Iannone, Rich and Presmanes Hill, Alison and Xie, Yihui},\n  title = {Distill for R Markdown},\n  url = {https://rstudio.github.io/distill},\n  year = {2018}\n}\n\nNote the format of this citation, where type can be manual, book, article, misc, etc. (all case-insensitive) and key is the citation reference used for inserting in-text citations.\n\n@type{key,\n  ...\n  }\n\nTo include an in-text citation for the above reference, type @allaire2018distill (or if you prefer your citation to be inside parentheses, [@allaire2018distill]). Adding the in-text citation will automatically add the full reference to your “References” list at the bottom of your post. To read more about including bibliographies and citations in your blog posts, see Xie (2021) and Xie, Dervieux, and Riederer (2021).\n\n\nvi. Appendices\nWhile citations and references will be automatically added as appendices to your blog post (if you followed along with the steps above), you can add additional content here by adding the .appendix class to any level 1 or level 2 header. For example, I added an additional “Corrections” statement to my appendix below by typing:\n## Corrections {.appendix}\nIf you see mistakes or want to suggest changes...\n \nI had a ton of fun playing around with some of these easy-to-implement features that the {distill} package provides for customizing blog posts. And I had even more fun checking out other data science blogs as I looked for inspiration. I hope they inspired you too! Happy blogging Face Smile Beam"
  },
  {
    "objectID": "posts/2021-09-21-distill-blogs/index.html#footnotes",
    "href": "posts/2021-09-21-distill-blogs/index.html#footnotes",
    "title": "Why create presentation slides about blogging when you can just blog about it instead?",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis is sometimes referred to as the Protégé Effect or the Feynman Learning Technique. You can learn a bit more from (Nestojko et al. 2014) and (Ambion et al. 2020)↩︎\nI might also add that having to look up something 3x for yourself might be a good reason to blog about it. Read David Robinson’s full post about starting a data science blog here.↩︎\nMany of the following blogs can be found on the distillery, a blog about building distill websites and blogs. Check it out!↩︎"
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html",
    "href": "posts/2022-10-24-quarto-blogs/index.html",
    "title": "Adding a blog to your existing Quarto website",
    "section": "",
    "text": "About a year ago, I wrote my first ever blog post ~ about blogging ~ and tbh I’m a little embarrassed that this is only my third post here (does it count that I have ideas for blog posts squirreled away at least?? ). Regardless, you should trust me1 when I say that blogging is a great exercise for you to practice as regularly as you can – it can help you to:\nRather than repeat more content here, take a peek at my first post, which touches on more reasons why you should blog and provides some ideas on how to structure your blog posts. Before jumping into things, I’ll leave you with one last piece of advice from @drob:"
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#I-MEDS",
    "href": "posts/2022-10-24-quarto-blogs/index.html#I-MEDS",
    "title": "Adding a blog to your existing Quarto website",
    "section": "I. Before we chat about blogs…",
    "text": "I. Before we chat about blogs…\nOur Master of Environmental Data Science (MEDS) students created the bones of their Quarto websites a couple months ago, and more recently took a little dive into website customization using Sass & CSS. For anyone who’s looking to get started on their website-building journey, feel free to explore the following resources:\n Creating your personal website using Quarto\n Customizing Quarto Websites: Make your website stand out using Sass & CSS"
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#II-blog-vs-website",
    "href": "posts/2022-10-24-quarto-blogs/index.html#II-blog-vs-website",
    "title": "Adding a blog to your existing Quarto website",
    "section": "II. What’s the difference between a website and a blog?",
    "text": "II. What’s the difference between a website and a blog?\nIf you’ve spent some time poking around the official Quarto documentation, you may have noticed instructions for creating either a Website or a Blog – but what’s the difference? Not much, aside from the initial structure:\n\n\n\n\n\n\n\n\n\nWhen you create a new Quarto website, it’ll look like this (it has a traditional landing (i.e. ‘Home’) page and no incorporated blog)…\n\n\n\n\n\n\n\n… while a new Quarto blog will look like this (with a listing page as your landing page)\n\n\n\n\n\nA Quarto Blog is a type of Quarto Website – you can create websites that consist of just a single blog (like the above right-hand example), websites that have multiple blogs, or you can add a blog to a website that contains other content (which is what we’ll be doing today)."
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#III-add-blog",
    "href": "posts/2022-10-24-quarto-blogs/index.html#III-add-blog",
    "title": "Adding a blog to your existing Quarto website",
    "section": "III. Adding a blog to your personal Quarto website",
    "text": "III. Adding a blog to your personal Quarto website\n\nTL;DR: A couple of steps are required for setting up your blog, but generally speaking, you’ll need:\n\na folder (i.e. subdirectory) to hold all of your individual blog posts – I called my folder posts/ (though the name is up to you). I also (optionally) added a _metadata.yml file to this folder which includes some formatting and configuration options that will apply to all blog posts in this folder\na listing page, which lists all of your blog posts for viewers to browse and click through – this is a .qmd file that you’ll add to your website’s navbar by including it in _quarto.yml\nblog posts! Your listing page will be blank until you actually add your first blog post\n\n\n\nLet’s create those together now.\n\nCreate a /posts folder: Open up your Quarto website project and make sure you’re in your root directory. Here, we’ll create a new subdirectory, called posts (though you can call this whatever you want), where all of our blog posts will eventually live. To do so, you can either:\n\nclick on the add folder button, , in the Files pane, or\nin the RStudio Terminal, run mkdir posts.\n\nOptional: Add a _metadata.yml file to /posts: While not required, a _metadata.yml file can make your life easier if you want certain options to apply to all blog posts that you create. Create this one of two ways:\n\nClick into the posts/ folder in the Files pane, then click Blank File &gt; Text File &gt; type _metadata.yml &gt; click OK, or\nIn the RStudio Terminal, run cd posts to move into that directory, then touch _metadata.yml to create the file\n\n\nOpen your _metadata.yml in the Source pane to add options. I like these options2, but it’s entirely up to you what you want to include (if anything at all):\n\n\n\n_metadata.yml\n\n# options specified here will apply to all posts in this folder\n\n# re-render posts only when a change to the source file is made ----\nfreeze: auto\n\n# enable banner style title blocks ----\ntitle-block-banner: true\n\n\n\nCreate a listing page: Add a posts.qmd file to your root directory (click on the R Project icon, , in the Files pane to jump back to your project’s root directory). There are a bunch of ways to create a new .qmd file, but one easy way is to choose File &gt; New File &gt; Quarto Document…. I’ll give mine the title “My Blog” when prompted (this is the name that will appear as the title your listing page), then save it as posts.qmd (but you can choose whatever title and / or file name you’d like).\n\n\n\n\n\n\n\nWhat is a listing page?\n\n\n\n\n\nA listing page is a web page with content that is automatically generated from a list of documents – in this case, that would be a list of blog posts – and looks something like this (or check out my blog’s listing page):\n\n\n\n\n\nAn example listing page from the Quarto Blog showing multiple blog posts. Quarto has multiple listing page layout options (default (shown above), grid, and table) for you to explore.\n\n\n\n\n\n\n\n\n\n\n\nConfigure your listing page: Specify how you’d like your listing page to be arranged by updating the YAML section of posts.qmd. There are a variety of options that you can specify. Below are just a few, but be sure to check out other options:\n\n\n\n\nposts.qmd\n\n---\ntitle: \"My Blog\"\nlisting: \n  contents: posts # this name must match the name of the folder you created in step #1; here, all Quarto docs in the `posts` directory will be included on your listing page\n  type: grid # or `default` or `table`; each type has its own set of yaml options to include\n  sort: \"date desc\" # can also sort on more than one field\n  categories: true # allows you to sort posts by assigned categories \n---\n\n\n\nAdd your listing page to your website’s navbar (so visitors can easily find your blog!): Update _quarto.yml with your new listing page to add it to your site’s navbar:\n\n\n\n\n_quarto.yml\n\n# ~ parts of `_quarto.yml` omitted for brevity ~\n\nwebsite:\n  navbar:\n    title: myWebsiteTitle\n    right:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n      - posts.qmd # add your listing page file to your navbar, just like you would any other new web page\n\n\n\nPreview or Render your website: Make sure your listing page shows up by previewing (I typically run quarto preview in the Terminal) or rendering (click the Render button in the Build tab in RStudio, or run quarto render in the Terminal) your website. You should have something that looks like this (we haven’t created any posts yet, so it’ll be empty for now):"
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#IV-add-post",
    "href": "posts/2022-10-24-quarto-blogs/index.html#IV-add-post",
    "title": "Adding a blog to your existing Quarto website",
    "section": "IV. Add a blog post to your blog",
    "text": "IV. Add a blog post to your blog\nNow that you have your listing page set up, we can start populating it with blog posts. Repeat the following steps each time you want to add a new post.\n\nCreate a subdirectory inside your posts/ directory: To stay organized, I usually name mine YYYY-MM-DD-short-post-description. This folder name will also become the slug for your published post.\nInside your new subdirectory, create an index.qmd file. Your file path should look something like this: myWebsite/posts/2022-10-24-my-blog-post/index.qmd. This file is your blog post. Write all your content here!\n\n\n\n\n\n\n\nWhy name your blog post file, index.qmd?\n\n\n\nThis is mostly important for maintaining short, clean URLs.\nLet’s take this very blog post for example. The content that you’re reading right now is written to the file, samanthacsik.github.io/posts/2022-10-24-quarto-blogs/index.qmd (you can check it out on GitHub), and the resulting URL is https://samanthacsik.github.io/posts/2022-10-24-quarto-blogs/.\nIf I named my blog post file something like, my-blog-post.qmd (rather than index.qmd), the resulting URL would instead look like, https://samanthacsik.github.io/posts/2022-10-24-quarto-blogs/my-blog-post.html. This isn’t necessarily wrong or broken, but it does result in a lengthier URL – and short URLs tend to be easier to remember.\n\n\n\nConfigure your blog post: You can add a variety of different options to the YAML section of index.qmd. Here are my go-to options:\n\n\n\n\nposts/2022-10-24-my-blog-post/index.qmd\n\n---\ntitle: \"blog post title\"\ndescription: \"blog post description (appears underneath the title in smaller text) which is included on the listing page\"\nauthor:\n  - name: Samantha Csik\n    url: https://samanthacsik.github.io/\n    orcid: 0000-0002-5300-3075\n    affiliation: Master of Environmental Data Science Program @ The Bren School (UCSB) & The National Center for Ecological Analysis & Synthesis\n    affiliation-url: https://ucsb-meds.github.io/ \ndate: 10-24-2022\ncategories: [Quarto, R, MEDS] # self-defined categories\ncitation: \n  url: https://samanthacsik.github.io/posts/2022-10-24-my-blog-post/ \nimage: preview-image.png\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\n\nSome notes on the above options:\n\nYou should include a title, but don’t necessarily need a description (though I think these are nice to include!). These fields will appear on your listing page. You may also consider adding a subtitle.\nYou can include more than one author – see this post and source code as an example.\nYou may include as many self-defined categories as you’d like. Make sure that your spelling / capitalization / punctuation is consistent across blog posts should you apply the same categories to multiple posts.\nAdding the citation option automatically generates both a BibTeX citation and reference for your blog post, and adds them to the bottom of your post.\nInclude an image (or gif) to add as a preview image, which will appear on your listing page alongside your post. Your image should live inside your post’s subdirectory (e.g. mywebsite/posts/2022-10-24-my-blog-post/preview-image.png).\nSet draft: true while you’re still working on your blog post to prevent it from showing up on your listing page, site map, or site search (it will still be available at a searchable URL). When you’re ready to publish, just remove draft: true from your YAML (or set to false), then render your post.\n\nQuarto v1.5.56 introduced draft banners, which will appear on any draft posts (see screenshot, below). You can also control how drafts are linked / rendered on your website using the draft-mode option. By default, any page set as a draft will not be linked or searchable. If you want your draft to still be searchable at it’s URL (helpful if you want to share a draft with someone, but don’t want it showing up on your listing page just yet), consider setting draft-mode to either unlinked or visible – check out the documentation for more information.\n\n\n\n\n\n\n\n\nRemember: You can also add options to _metadata.yml if you want them applied to all posts!\n\n\n\nDo you want your own author / affiliation information applied to each blog post you write, by default? Add it instead to _metadata.yml and save yourself re-typing it each time you create a new post!\nAre you collaborating on a blog post with additional authors? You can override the defaults set in _metadata.yml by specifying the author option directly in any particular blog post file (index.qmd).\n\n\n\n\n\n\n\n\n\n\n\nA grid-style listing page featuring one blog post with a preview image, title, three categories, description, author, and publishing date\n\n\n\n\n\n\n\nAn example draft blog post, with a banner-style title block. The draft notice will disappear and the blog post will appear on the listing page once draft is set to false.\n\n\n\n\n\nIf things aren’t working as expected, double check your repository structure – it should be organized similar to this:"
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#V-additional-features",
    "href": "posts/2022-10-24-quarto-blogs/index.html#V-additional-features",
    "title": "Adding a blog to your existing Quarto website",
    "section": "V. Some additional authoring features to explore",
    "text": "V. Some additional authoring features to explore\nBlog posts are just Quarto documents, meaning you can combine prose, code, and embedded outputs all in one place, just like you would in any other .qmd file (which makes your blog the perfect place to create data science / programming tutorials both for yourself and others ). If you’re looking for additional ways to enhance your posts, read on below:\n\nAdding footnotes\nThere are multiple ways to include footnotes throughout your blog posts:\n\nUse the [^#] syntax to denote where you would like a note to be inserted. Write your note somewhere below following the [^#]: your note here syntax. For example:\n\n\nI am going to insert a footnote here[^1].\n\n[^1]: Here is the associated footnote, which will appear at the bottom of my document in a \"Footnotes\" section.\n\n\nAlternatively, you can write your notes inline to avoid having to use identifiers (e.g. [^#]). For example:\n\n\nI am going to insert an inline footnote here^[Here is my inline footnote].\n\n\nYou can also add footnotes that include multiple paragraphs. See the source code for this blog post and take a peek at footnote #2 for an example on how to do so (or check out the Quarto documentation).\n\nAll footnotes will appear in a “Footnotes” section that is automatically generated for you.\n\n\nCreating a bibliography and adding citations\nQuarto supports the use of bibliography files for citing works throughout your blog post. There are a number of ways to do this, but so far, I’ve found creating a BibLaTex database to be relatively straightforward. This database takes the form of a plain-text .bib file where we can store all of our bibliographic information. That information needs to be encoded in a particular way (more on that below). Follow these steps to cite works in your blog posts:\n\nFirst, create a .bib file in the folder containing your blog post (e.g. myWebsite/posts/YYYY-MM-DD-my-blog-post/references.bib) using the touch command in your RStudio Terminal or using the Blank File &gt; Text File button in the Files pane. I called mine references.bib, but the name is up to you.\nAdd the bibliography option to your blog post’s YAML and provide it the name of your .bib file:\n\n\n---\ntitle: \"blog post title\"\n# ~ additional YAML options omitted for brevity ~\nbibliography: references.bib\n---\n\n\nNext, we’ll want to add some references. These take a particular format that generally looks like this (the number / types of fields included may vary):\n\n\n\n\nreferences.bib\n\n@type{key,\n  author = {LastName, FirstName},\n  title = {Title of work},\n  date = {YYYY}\n  url = {https://url.com},\n  langid = {en}\n}\n\n\nwhere type can be manual, book, article, misc, etc. (all case-insensitive) and key is the citation identifier used for inserting in-text citations (we’ll get there soon).\n\nThere may be instances where you want to cite a resource that already has a BibTex citation available for you to copy over to your references.bib file (e.g. this blog post). For most resources, however, you’ll need to construct your own. You can do this manually, or with the help of a BibTeX reference generator (Googling will yield plenty of options, but zoterobib is a great place to start. Note that you may have to make some manual adjustments). Check out my references.bib file for this post as an example.\n\n\nNow that you have BibTex references in your .bib file, you can start adding in-text citations. These generally take the form [@key] (but read more about Quarto citation syntax). When you add an in-text citation, Quarto will automatically add the reference to the bottom of your blog post under the “References” section.\n\n\nTo give a concrete example, let’s say I want to cite my first (ever) blog post from 2021. I can copy the BibTeX citation from the bottom of the post and paste it into my references.bib file:\n\n\n@online{csik2021,\n  author = {Samantha Csik},\n  title = {Why Create Presentation Slides about Blogging When You Can\n    Just Blog about It Instead?},\n  date = {2021-09-24},\n  url = {https://samanthacsik.github.io/posts/2021-09-21-distill-blogs/},\n  langid = {en}\n}\n\n\nI can now add an in-text citation using the [@csik2021] syntax, which will render it like this  (Csik 2021). Once cited, the full reference will appear in my References section at the bottom of this post.\n\n\nOptionally, you can update your preferred citation style (the default is set to Chicago Manual of Style). Search for and download your preferred citation style (in the form of a .csl (Citation Style Language) file) from either CSL Project or Zotereo’s style repository, and add it to your blog post’s folder. Update your blog post’s YAML using the csl option to apply the new styling. For example, I can apply PLOS Computational Biology styling:\n\n\n---\ntitle: \"blog post title\"\n# ~ additional YAML options omitted for brevity ~\ncsl: plos-computational-biology.csl\n---\n\nThat wasn’t so bad, right?? What if I told you there was an even easier way to add citations….Start by popping over to RStudio’s Visual editor, if you’re not already there (you should see buttons for working in either the Source or Visual editor in the top left corner of your source pane), and follow the steps below:\n\nPlace your cursor where you’d like to insert a citation, then from the Insert drop down menu, select Citation.\nA new window will pop open with a number of different options for inserting citations. If you’ve already created a references.bib file, it will appear under the My Sources and Bibliography sections. You can choose to insert citations using any of your existing references, or choose another option, like inserting a citation based on a DOI. Give it a try using this DOI from Gaynor et al. 2022 – you’ll notice that when an in-text citation is added using a DOI, your references.bib file will automatically be updated with the BibTeX reference. If you don’t yet have a .bib file, one will be automatically generated for you. LIKE SERIOUSLY?? Where was this when I was in grad school?? SO FREAKIN COOL.\n\n\n\n\n\n\n\n\n\n\nOkay, back to being chill…\n\n\nArticle layout\nQuarto also supports a number of different page layout options to further customize the appearance of your posts. Explore different ways to position elements on your page, including embedding outputs, captions, references in your page margin (one of my personal faves…despite the fact that I don’t have any here in this post)."
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#VI-more-blogs",
    "href": "posts/2022-10-24-quarto-blogs/index.html#VI-more-blogs",
    "title": "Adding a blog to your existing Quarto website",
    "section": "VI. A note on adding an additional blog (or more) to your site",
    "text": "VI. A note on adding an additional blog (or more) to your site\nYou aren’t limited to just one blog / listing page! Repeat Part III to add a second listing page + content to your website. My personal website contains four listing pages – one called posts (aka my actual blog), one called talks & workshops, once called courses, and one called projects. Explore the GitHub repo to take a peek at the file structure and source code."
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#VII-follow",
    "href": "posts/2022-10-24-quarto-blogs/index.html#VII-follow",
    "title": "Adding a blog to your existing Quarto website",
    "section": "VII. Blogs to follow (+ one post from each that I’ve particularly enjoyed)",
    "text": "VII. Blogs to follow (+ one post from each that I’ve particularly enjoyed)\nThere are tons of awesome data science bloggers out there – here are just a few that I’ve enjoyed, but get out there and start exploring others for yourself!\nAlso note: I’ve included one blog post from each creator and added citations (with the year only format). Check out the source code for this post to see how it’s done.\n\nPiping Hot Data, by Shannon Pileggi, and her post, Curating for @WeAreRLadies on Twitter (2021)\nMeghan Hall’s Blog, and her post, Increasing the Flexibility and Robustness of Plots in ggplot2 (2022)\nCosima Meyer’s Blog, and her post, Understanding the Basics of Package Writing in R (2022)\nNotes from a Data Witch by Danielle Navarro, and her post, Getting started with Apache Arrow (2021)\nBeatriz Milz’s Blog, and her post Introduction to GitHub Actions for R users (2022)\nAlbert Rapp’s Blog, and his post Recreating the Storytelling with Data look with ggplot (2022)\nCédric Scherer, and his post A ggplot2 Tutorial for Beautiful Plotting in R (2019)"
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#VIII-resources",
    "href": "posts/2022-10-24-quarto-blogs/index.html#VIII-resources",
    "title": "Adding a blog to your existing Quarto website",
    "section": "VIII. Additional Resources",
    "text": "VIII. Additional Resources\n\nThe ultimate guide to starting a Quarto blog, by Albert Rapp is incredibly thorough and explores even more ways to customize your blog. Check it out!\nCreating a blog with Quarto in 10 steps, by Beatriz Milz walks through the steps of setting up a new Quarto Blog project. She also details how to set up giscus to enable comments on your blog posts."
  },
  {
    "objectID": "posts/2022-10-24-quarto-blogs/index.html#footnotes",
    "href": "posts/2022-10-24-quarto-blogs/index.html#footnotes",
    "title": "Adding a blog to your existing Quarto website",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nOkay, you don’t just have to trust me. Lots of data scientists advocate for blogging as an important skill and communication tool. Check out this blog post by David Robinson to start.↩︎\nThe freeze option: Setting this option to auto will only re-render posts when you make updates to the source files (as opposed to re-rendering them each time you Render Website – this can save time, particularly if you have computationally-heavy content in your blog posts). If you set this option to true, posts will never be re-rendered (even if you’ve made changes to the source files). If you use this option, you’ll need to Render individual posts whenever you make changes to their source files before you Render Website, otherwise your updates will not appear. Check out the Quarto documentation and this great short blog post for more information on freeze.\nThe title-block-banner option: Setting this option to true will enable a banner style title block (where the title, subtitle, description, and categories are all positioned inside the banner) for all posts.↩︎"
  },
  {
    "objectID": "courses.html",
    "href": "courses.html",
    "title": "courses",
    "section": "",
    "text": "EDS 240 - Data Visualization & Communication\n\n\n\nUCSB\n\n\ndata-visualization\n\n\nR\n\n\nggplot\n\n\n\na 4-unit core course covering the basic principles for effective communication through data viz + lots of {ggplot2}!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEDS 296-1W - Intro to Shiny\n\n\n\nUCSB\n\n\nshiny\n\n\nR\n\n\n\na 2-unit course on building and deploying Shiny apps & dashboards\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEDS 296-1F - Data science tools for building professional online portfolios\n\n\n\nUCSB\n\n\ndata-science-portfolio\n\n\nQuarto\n\n\nGitHub\n\n\n\na 2-unit course on building, customizing, and maintaining professional online data science portfolios\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-08-01-openscapes-website/index.html",
    "href": "posts/2023-08-01-openscapes-website/index.html",
    "title": "Porting the Openscapes website from blogdown to Quarto",
    "section": "",
    "text": "Y’all, I did something really exciting – I built another website! This time as a first-time freelancer. I’m not sure that I would have had the confidence to accept just any ole’ request to do so, but when Julie Lowndes, founding director of Openscapes, and also a mentor turned friend (thank you R-Ladies Santa Barbara community!), asked if I’d be interested in rebuilding the Openscapes website, it felt like a really awesome personal and professional growth opportunity.\nThere are so many amazing things I could say about this process and experience, but I’d be writing a novel. Instead, I’m going to do some high-level reflection and focus a bit on the parts of the process that I enjoyed the most."
  },
  {
    "objectID": "posts/2023-08-01-openscapes-website/index.html#task-port-the-openscapes-website-from-blogdown-to-quarto",
    "href": "posts/2023-08-01-openscapes-website/index.html#task-port-the-openscapes-website-from-blogdown-to-quarto",
    "title": "Porting the Openscapes website from blogdown to Quarto",
    "section": "Task: Port the Openscapes website from blogdown to Quarto",
    "text": "Task: Port the Openscapes website from blogdown to Quarto\nTo start, what does port mean? While it may be obvious to some, I feel like this word is sort of jargon-y. I first learned of it when Quarto was thrust into the spotlight and the R community at large began “porting their websites from distill/blogdown/etc to Quarto”. I came to understand that (at least in this context) “port” means “to convert or migrate” a website from one framework to another (or in other words, rebuild a website using different tools).\nSo, why the need to port the Openscapes website to Quarto? Julie originally built the site back in 2018 using blogdown and the Universal Theme for Hugo (you can still check out the GitHub repo) – and it was really beautiful!\n\n\n\n\n\n\n\n\n\n\nA screenshot of the old Openscapes website’s landing page, built using blogdown.\n\nUnfortunately, upgrades to Hugo were beyond Julie’s scope to maintain and meant the site could no longer be built locally (i.e. you couldn’t preview the site on a personal computer). In other words, the site needed to be redeployed in order to view any changes. Not only was this a rather slow process, but it also meant that there was no easy way to test out new additions/pages/features (or even check for typos) before sharing those updates with the rest of the online world.\nAdditionally, the Openscapes team has used Quarto since its earliest days (read more about that in their quarto blog posts) – it seemed like a good time as any to begin using this same tool for building the Openscapes website as well."
  },
  {
    "objectID": "posts/2023-08-01-openscapes-website/index.html#pause-why-me",
    "href": "posts/2023-08-01-openscapes-website/index.html#pause-why-me",
    "title": "Porting the Openscapes website from blogdown to Quarto",
    "section": "Pause: Why me?",
    "text": "Pause: Why me?\nFor one, I am not a web developer. I also had never used blogdown before, but I have worked a fair bit with Quarto. My real job involves teaching data science skills to students in the Bren School’s Master of Environmental Data Science (MEDS) program – this includes teaching students how to build a personal website using Quarto, how to customize Quarto websites using Sass & CSS, and how to add a blog to their Quarto website.\nHowever, all websites I’ve built/contributed to/taught about have been personal websites (e.g. like my own, https://samanthacsik.github.io) – oftentimes, these leverage a special template to easily arrange the contents of a website’s landing page. Rebuilding the Openscapes website meant diving deeper into custom layouts, responsive web pages, and generally, a whole lot of stuff I had little to no familiarity with…which honestly really scared me (aren’t freelancers supposed to know how to do what they’re being hired to do??). With Julie’s reassurances that not knowing was okay, and that there was time and space to learn together (very on brand for the community she and her team foster through Openscapes ), I set off on my first freelancing adventure."
  },
  {
    "objectID": "posts/2023-08-01-openscapes-website/index.html#general-porting-process-easy-stuff-first-then-lots-and-lots-of-learning-and-iterating",
    "href": "posts/2023-08-01-openscapes-website/index.html#general-porting-process-easy-stuff-first-then-lots-and-lots-of-learning-and-iterating",
    "title": "Porting the Openscapes website from blogdown to Quarto",
    "section": "General Porting Process: Easy stuff first, then lots and lots of learning and iterating!",
    "text": "General Porting Process: Easy stuff first, then lots and lots of learning and iterating!\nDespite the fact that I was leading the charge on most of the technical aspects of this project, porting the Openscapes website was truly a collaborative effort involving myself, Julie, and Stefanie Butland, one of the core Openscapes team members and someone I’ve gotten to know through attending past Openscapes events.\nSteps for porting the website generally looked like this:\n\nRecreate as much of the website as possible: I created a Quarto website that looked as close as possible to the original blogdown site – this meant getting the main website pages and blog content moved over without much fussing. The most challenging part was creating a custom landing page that both matched the aesthetics of the blogdown site and that looked good on smaller viewports/mobile devices – this ended up being the last thing I addressed before wrapping up the project. Ultimately, I was able to recreate a Quarto-based Openscapes website that looked nearly identical to the blogdown version – it was really cool to see how flexible Quarto allows you to be!\n\n\n\n\n\n\n\n\n\n\n\nA screenshot of the new Openscapes website’s landing page, built using Quarto! We were able to recreate the landing page so that it looked pretty darn similar to the blogdown site.\n\n\nIncorporate events: Openscapes Events were historically announced through a separate Events blog, which we decided to incorporate fully into the Openscapes website on its own events listing.\nFeedback & updates: Stef and Julie did multiple deep dive reviews of the website and I made changes based off their suggestions/requests. Some of these were minor (e.g. “Can we add a bit more vertical space in underlined text”, “this hyperlinked text is broken”), while others required a bit more thought (e.g. “let’s rethink how we structure content on this page”, figuring out CSS to style particular page elements). They also had the chance to share the website with a focus group, which provided invaluable feedback on content organization, language, etc. (e.g. “remove unnecessary text from the landing page”, “replace the words instructional materials with curriculum”)\nMore feedback & updates: The hardest part and also the most fun part was the back-and-forth discussion on how to rethink, try out, and change the website. We fiddled a lot with content reorganization and CSS styling to better highlight different resources/elements. It was a super collaborative and iterative process to get things to where they are now!\nFigure out responsive web pages: I saved the most technically challenging part (at least for me) for last – learning how to create responsive web pages (where content adjusts size and positioning based on viewport size) involved a lot of trial and error.\nDeploy with Netlify & troubleshoot redirects: It took us a minute to understand how to get redirects to work. I won’t go into that here, but you can read about our solution on our redirects wiki."
  },
  {
    "objectID": "posts/2023-08-01-openscapes-website/index.html#culture-communication-share-openly-and-often-were-all-here-to-brainstorm-support-cheer-on",
    "href": "posts/2023-08-01-openscapes-website/index.html#culture-communication-share-openly-and-often-were-all-here-to-brainstorm-support-cheer-on",
    "title": "Porting the Openscapes website from blogdown to Quarto",
    "section": "Culture & Communication: Share openly and often, we’re all here to brainstorm, support, cheer on",
    "text": "Culture & Communication: Share openly and often, we’re all here to brainstorm, support, cheer on\nWhile Julie, Stef, and I all had some level of experience using Quarto, we were dancing at the edge of our collective existing knowledge and trying out things that we weren’t always sure would work. Sharing progress and celebrating victories was a super important part of the process.\n\n\n\n\n\n\n\n\n\n\nWhat I hoped to look like while navigating uncertain approaches, troubleshooting, and learning on the fly. Artwork by Allison Horst.\n\nWork was largely asynchronous, so we relied heavily on online tools to communicate:\n\nSlack\nSpecifically, the R-Ladies Global Slack workspace (again, always grateful for the R-Ladies community that brings together awesome people) became an important place to drop quick questions, requests, words of affirmation, and to cheer on successes.\n\n\n\n\n\n\n\n\n\n\nCelebrating the greatest success of them all – deploying the new Openscapes website!\n\n\n\nGitHub Issues\nOur primary place for keeping track of TODOs, documenting solutions, and soliciting feedback. Check out my first request for feedback (issue #14) or Julie & I documenting our Netlify deployment struggles and victories (issue #36)."
  },
  {
    "objectID": "posts/2023-08-01-openscapes-website/index.html#reflecting-on-the-stand-out-moments",
    "href": "posts/2023-08-01-openscapes-website/index.html#reflecting-on-the-stand-out-moments",
    "title": "Porting the Openscapes website from blogdown to Quarto",
    "section": "Reflecting on the stand-out moments",
    "text": "Reflecting on the stand-out moments\nBuilding this website has been a real journey (a 6-month long one)! While I can’t recount all the details here, I did want to reflect on a few things I’m most excited about:\n\nGreatest victory: responsive web pages\nA responsive web page is one with elements that automatically resize and reorganize based on the size and shape of the viewport and/or device it’s being viewed on. This responsiveness is critically important for ensuring a high quality user experience, no matter how a user is accessing the website.\nFor example, note how elements organized in columns (e.g. Engage/Empower/Amplify, the three stat boxes) when the browser viewport is at full width will stack vertically once the browser window is made narrower (elements will also be stacked vertically when viewed on a mobile device):\n\n\n\n\n\n\n\n\n\nas opposed to columns getting crunched when the browser window is made narrower:\n\n\n\n\n\n\n\n\n\nI left figuring this out until the very end…mostly because I had no idea how to approach doing so. The Quarto documentation makes reference to Bootstrap’s CSS Grid and provides a simple, but clear example of creating columns in our Quarto doc. This helped me get started on a non-responsive 3-column layout, which looks like this:\n\n::: {.grid}\n\n::: {.g-col-4}\nleft-hand column content\n:::\n\n::: {.g-col-4}\ncenter column content\n:::\n  \n::: {.g-col-4}\nright-hand column content\n:::  \n\n:::\n\nwhere {.g-col-4} defines the width of the column (Bootstrap’s grid system has a total of 12 columns across a page, so each of our 3 columns will be a width of 4).\nI got stuck for a long while after this point – the CSS Grid documentation makes it clear that this approach can be used to create responsive columns, but I found the provided example to be a bit confusing. After a lot of trial and error, and stumbling across this table that (sort of) makes reference to .g-col vs. .g-col-md classes from the CSS Grid documentation example, I eventually got myself some working responsive columns. While I still don’t fully understand it, this is my best attempt at explaining my working solution…here’s what it looks like:\n\n::: {.grid}\n\n::: {.g-col-12 .g-col-md-4}\nleft-hand column content\n:::\n\n::: {.g-col-12 .g-col-md-4}\ncenter column content\n:::\n  \n::: {.g-col-12 .g-col-md-4}\nright-hand column content\n:::  \n\n:::\n\n.g-col-12 represents the width of each column when the viewport is made smaller (e.g. either a narrow browser window or on a mobile device) – since the width of our browser is a total of 12 units, each column will take up the full width of the browser and be forced to stack vertically.\n.g-col-md-4 represents the width of each column when the viewport is made larger (e.g. a browser window that takes up a full laptop screen) – in this case, each column will only take up 4 units, or a third of the full width of the browser and can sit side-by-side one another.\nHere’s the above example in action:\n\n\n\n\n\n\n\n\n\nUltimately, I used this approach for all pages that needed responsive columns (largely the landing page, but also the Our Team page and Resources page). If you end up finding this helpful in your own responsive web page journey – Yay!! If you have an alternative or improved solution, or if you understand these CSS grid classes more than I do, please do drop me a line – I’d love to hear all about it \n\n\nFavorite new thing(s) learned: mobile device previews and regex\nOkay, I couldn’t choose one, so here are my top two:\n\nPreviewing a web page for mobile device viewing: When building my own personal website, I always took the “let’s make changes, redeploy, then check it out on my phone to see how it looks” approach…which is never ideal. Huge shout out to my husband, Brendan Shanny, who showed me that you can preview a website as it would appear on a mobile device directly from Google Chrome. Right click on a web page &gt; choose Inspect &gt; click on the button with the laptop and phone icon in the top left corner of the Inspect pane to toggle between standard computer and mobile viewport sizes.\n\n\n\n\n\n\n\n\n\n\n\nView a web page as if on a mobile device by clicking on the laptop/phone button (circled in red) at the top of the Inspect pane.\n\n\nRegular expressions (regex) are really powerful: I’ve heard the terms “regular expressions” and “regex,” and I know they underlie some really powerful R packages (e.g. {stringr} for manipulating character strings), but I never really knew what they were or how to use them. Julie first introduced me to using regex during one late-night co-working session (she broke out her original copy of Practical Computing for Biologists, by Steven H. D. Haddock and Casey W. Dunn, which includes an excellent primer). Not more than a few days later, we realized we needed to reformat our redirects file, changing the way blog post URLs were represented from this:\n\n\n# Redirects from what the browser requests to what we serve\nblog/2021/03/10-nasa-announcement /blog/2021-03-10-nasa-announcement\nblog/2021/05/03-noaa-nwfsc-champions /blog/2021-05-03-noaa-nwfsc-champions\nblog/2022/02/17-esip-winter-2022 /blog/2022-02-17-esip-winter-2022\n\nto this:\n\n[[redirects]]\n  from = \"/blog/2021/03/10-nasa-announcement/\" \n  to = \"/blog/2021-03-10-nasa-announcement/\"\n  status = 301\n\n[[redirects]]\n  from = \"/blog/2021/05/03-noaa-nwfsc-champions/\" \n  to = \"/blog/2021-05-03-noaa-nwfsc-champions/\"\n  status = 301\n  \n[[redirects]]\n  from = \"/blog/2022/02/17-esip-winter-2022/\" \n  to = \"/blog/2022-02-17-esip-winter-2022/\"\n  status = 301\n\nUsing regular expressions (directly in RStudio!) to create patterns for matching, locating, and manipulating text allowed me to quickly reformat the 100+ redirects all at once. I documented my workflow in our redirects wiki.\n\n\nFavorite website feature: wikis\nMy favorite website feature is actually not a feature of the website itself (), but rather our GitHub Wiki for documenting conventions and workflows for current/future maintainers.\nWhile most of my notes initially ended up in GitHub Issues (e.g. page structure/styling conventions (issue #4), Using knitr::include_graphics() (issue #11)), wikis seemed to be a more organized solution for sharing these notes (and other important information) with those who will be maintaining and making changes to the website moving forward. Wiki articles range from creating and categorizing new blog posts to adding images to the website in a consistent way to an overview of styling the website using Sass & CSS.\nI’m honestly so jazzed about wikis at the moment and plan to start using them more to share project-specific information. Recently I created a wiki to provide setup instructions for workshop participants – in the past, I’ve linked a shared Google Doc in the repository’s README with similar setup information, which is effective, but harder to keep track of as a maintainer.\n\n\nMost valuable personal growth moment: overcoming imposter syndrome\nI’ve struggled with imposter syndrome throughout my professional career (as so many do!) – and it is hard to shake the feeling that I’m not qualified to be doing [fill in the blank with any one of the things that I get in my own head about]. This project was not one of those things. And I totally credit it to the supportive (and just generally fun) community that Julie and Stef create. It’s not easy to foster an honest no-such-thing-as-failing environment, but I really felt that way from the moment I got started (which says a lot, given that I’d be learning on the go for much of the project). I feel very lucky and honored that they trusted me with this work.\nThe Openscapes team certainly practices what they preach – you can read all about the Openscapes Approach for promoting psychological safety, kinder science, and a growth mindset, as well as explore the many other great resources developed by Openscapes.\n\nYou can check out the Openscapes website at https://openscapes.org/. Source code is available on  GitHub."
  },
  {
    "objectID": "posts/2024-04-02-data-viz-course/index.html",
    "href": "posts/2024-04-02-data-viz-course/index.html",
    "title": "Building (and teaching) a graduate-level data science course",
    "section": "",
    "text": "I had initially intended for this to be a short, high-level reflection of what it was like to build and teach a new (to me) grad-level course. I decided part-way through, however, that this might be the best time to jot down some of the more nitty-gritty details (planning timelines, pedagogy, classroom management, curriculum, etc.), and as a result, it’s turned into a short novel. I hope other new educators might find some of these details helpful!\nI’m eternally grateful to the many colleagues, educators, and online strangers who have taken the time to share their own experiences, advice, and materials – the open data science community is a real gem, and I’m so lucky to be a part of it.\nIt felt like running a marathon at sprint speed at times (okay, almost the whole time), but I just finished teaching my first(!!) graduate-level course for the Master of Environmental Data Science (MEDS) program – I’m so exhausted and so proud and I can’t wait to (hopefully) do it again next year. While I’ve witnessed many incredible colleagues successfully teach really rad courses in this program since it first began in 2021, I still felt like I was stepping into a large unknown. Now that I’m through the other side, I wanted to reflect on my process, experience, and considerations. I’ve learned so much (seriously sooooo much) from other educators who have openly shared their materials and ideas online, and writing this here is my small way of trying to to do the same."
  },
  {
    "objectID": "posts/2024-04-02-data-viz-course/index.html#first-some-context",
    "href": "posts/2024-04-02-data-viz-course/index.html#first-some-context",
    "title": "Building (and teaching) a graduate-level data science course",
    "section": "First, some context",
    "text": "First, some context\nThe MEDS program is an 11-month professional masters program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis (NCEAS). The program is designed to provide data and technical skills to students with prior experience in the environmental sciences, preparing them for a workforce where data and programming literacy is increasingly becoming the norm.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOf course we have hex designs for each of these departments / programs . From left to right: Bren School of Environmental Science & Management, Master of Environmental Data Science (MEDS), National Center for Ecological Analysis and Synthesis (NCEAS). If you’re new to the R community, hex stickers often accompany popular packages and adorn the laptop lids of many R users.\n\nEDS 240: Data Visualization and Communication is MEDS a “core” course, meaning students need to enroll in and pass the course as a step towards earning their degree. While I’m not new to teaching – in fact, my role within the MEDS program is primarily centered around developing and teaching short (typically 1-3 hours) workshop-style courses that supplement the core curricula – taking on a 4-unit core course was certainly new territory. When the opportunity to teach EDS 240 opened up, I was pretty excited and also really nervous. Sure, I was familiar with the idea of data visualization – I’ve created my fair share of ggplots, discussed / admired / critiqued plenty of viz, and I’ve made good use of some of the most popular online data viz resources – but I certainly would not consider myself an “expert” in this field or even in using {ggplot2} + extension packages in R.\nMy only real guidelines were to beef up the technical skills / lessons – the prior version of this course was highly conceptual and didn’t involve much programming. Other than that, I was free to do what I wanted. And so, I set off on building my very first grad-level data science course."
  },
  {
    "objectID": "posts/2024-04-02-data-viz-course/index.html#early-logistics-class-schedules-enrollment",
    "href": "posts/2024-04-02-data-viz-course/index.html#early-logistics-class-schedules-enrollment",
    "title": "Building (and teaching) a graduate-level data science course",
    "section": "Early logistics: class schedules & enrollment",
    "text": "Early logistics: class schedules & enrollment\nSome action items needed to be addressed in advance of even beginning to plan the course, including submitting my desired meeting times and setting the maximum student enrollment – Bren’s Academics team would use this information to work on the absolutely insane puzzle that is class scheduling (they are truly rock stars).\nI chose to hold lecture once a week for 3 hours – my vision for the class was a mix of lecture-based conceptual content and applied coding exercises, and I hoped that this longer block of time would allow me to switch back and forth between the two more easily than in a shorter 1.5 hour-long class that met twice per week.\nI set my maximum enrollment to 40 students and ultimately ended up with 37 – this included all 31 MEDS students, 4 Master of Environmental Science & Management (MESM) students, and 2 non-Bren students. Non-MEDS students were required to reach out to me and confirm that they met course prerequisites (they needed to have taken at least one prior course taught in R + have familiarity with git / GitHub) before receiving an enrollment code.\nStudents would also be required to enroll in one of two 50 minute-long discussion sections – these are new to MEDS this 2023-2024 academic year and each instructor has used them in slightly different ways. I had no idea how these would look until I got farther along in the course planning process (more on that later)."
  },
  {
    "objectID": "posts/2024-04-02-data-viz-course/index.html#timeline",
    "href": "posts/2024-04-02-data-viz-course/index.html#timeline",
    "title": "Building (and teaching) a graduate-level data science course",
    "section": "My preparation timeline",
    "text": "My preparation timeline\nI spent about 7 months sincerely preparing for and teaching EDS 240 (not including the application and interview process). I recognize that’s a long runway and that not every instructor is afforded the time or has the capacity to do the same. As an existing employee of the MEDS program whose responsibilities are largely centered around teaching, I was allowed the time and space to think deeply about this course. I’m a super nervous planner when it comes to anything work / teaching-related (hello, imposter syndrome!), so I personally needed this prep time to feel like I had things (sort of) under control. Here’s how that timeline roughly shook out:\nNote: I’m also including information about the application process here – it was totally foreign to me, and while this is specific to UCSB / Bren, I imagine other institutions may follow a similar process.\n\nApril 2023: Submitted my application for Teaching Positions, Bren School of Environmental Science & Management – this is a general call for Unit 18 Faculty (often referred to as Lecturers). Applications require a cover letter, CV, Teaching Statement, and three references. You are asked to specify which course(s) you are interested in teaching.\nJune 2023: Interviewed – this hour-long interview began with a 10min teaching demo followed by ~10min of Q&A. Your demo must be related to the subject area of the course you’re intending to teach (i.e. in my case, it needed to be about data viz). I chose to do a live coding demo, since my vision for EDS 240 would involve a lot of that (see Nederbragt et al. (2020) for more on this teaching technique).\nSeptember 2023: Signed my contract. After negotiations, I ended up at 50% time in my typical full-time role (Data Training Coordinator, more formally classified as Academic Coordinator I), 33% time as Unit 18 Lecturer, and 17% time for curriculum development. It’s important to note that these appointments are only for the quarter in which the course is taught (i.e. winter quarter, Jan - Mar 2024). The lecturer salary scale is higher than than my current full-time salary, so this split appointment meant I would earn a bit more during winter quarter. Once signed, I got started working on the course syllabus.\nOctober - November 2023: While my appointment didn’t officially start until January, I spent about 30-40hrs/week prepping for the class during fall quarter (which is a lot of time…this is not an attempt to applaud “the grind,” but rather reflect how this experience played out for me). I focused primarily on the syllabus, grading structure, drafting high-level outlines of weekly topics, building the skeleton of the course website, and learning other necessary classroom management tools (I’ll elaborate more on all of these in the next sections). I was able to prep ~2 of 4 homework assignments (plus jot down ideas for others), and even a couple early lectures. I also spent ~30hrs/week teaching my typical fall workshops, reviewing / updating materials for EDS 296-1W: Intro to Shiny (a 2-day short course that I also teach in winter quarter), and other MEDS administrative stuff.\nDecember 2023: Oof, this was definitely the hardest month out of the whole experience – while most folks were winding down after a busy fall quarter, I felt like I had to ramp up (more so than I already had been). I was also tired from a stacked fall and wanted so desperately for a break that I felt like I couldn’t really take. I was also coming to terms with the fact I would absolutely not have the whole course planned / materials created ahead of the January 8th start date ( yes, that was incredibly naive thinking on my part). I did hope to have materials and plans for the first 6 weeks of the quarter largely created – I had a number of other non-EDS 240 events, teaching, and responsibilities during this first half of the quarter and I was genuinely worried about not having enough time to do it all.\nJanuary - March 2023 (winter quarter): Here we go! By this point, I had weeks 1-4 fully planned, weeks 5-6 outlined(ish), and weeks 7-10 were largely untouched (aside from having scheduled Allison Horst’s guest lecture on using Observable JS to create interactive viz during week 9!). I tried my best to work ahead and continue prepping future lectures / assignments / etc. but this wasn’t totally sustainable. By ~week 5, I was prepping each lecture the week before delivering it. That said, I had compiled so many resources and jotted down so many random ideas as I came across things, so creating new lectures did get a bit easier as time went on."
  },
  {
    "objectID": "posts/2024-04-02-data-viz-course/index.html#building-the-course",
    "href": "posts/2024-04-02-data-viz-course/index.html#building-the-course",
    "title": "Building (and teaching) a graduate-level data science course",
    "section": "Building the course",
    "text": "Building the course\nI very quickly realized that building a course involves a whole lot more than just figuring out what topics to teach. My initial TODO list looked something like this:\n\nBuild the course syllabus (including learning objectives, topics, schedule, policies)\nDecide how to assess student success (i.e. grades)\nDetermine how to build & organize course materials\nCreate & manage assignments + provide feedback\nPlan TA responsibilities\n\nI’ll walk through each of these in a bit more detail, then wrap up with some things that worked particularly well, things I’d like to do differently, and other musings.\n\n1. Build the course syllabus\nThis was probably the most intimidating part, given that it’s the one place to comprehensively describe all aspects of course proceedings – from (tentative) topics covered to assignment due dates, and grading schemes to course policies. I chose to begin with defining the course’s learning objectives, i.e. what I wanted all students to feel comfortable with and be able to execute on by the end of the course. It was really important to me that I blended technical skills (e.g. using {ggplot2}) with information design theory and a solid conceptual understanding of what makes a good data visualization (i.e. transferable knowledge, regardless of the programming language / data viz tool of choice).\nAfter a lot of iterating, seeking feedback from a mix of past MEDS students (now NCEAS data scientists) and other NCEAS educators, I ended up with a list of six learning objectives (check out the syllabus to see what they are!). Next, I began mapping out tentative topics by date, being mindful of holidays (no lectures during weeks 2 & 7), large non-EDS 240 deadlines (e.g. MEDS Capstone faculty reviews), and the skills we’d need to cover ahead of distributing each new homework assignment. This schedule was a detailed draft at best – topics were shifted around a bit or dropped entirely leading up to the start of the quarter and even during the quarter (once I had a better understanding of how much I could realistically cover in a given class).\nAfter these pieces were drafted up, I started filling in the remaining gaps: course policies, grading structure, student resources, etc. The syllabus was in a constant state of revision right up until the start of the course, but getting that first draft squared away felt like a huge accomplishment and it served as my North Star once I finally began creating course materials.\n\n\n2. Decide how to assess student success\nA conversation Nate Emery, the STEM Education Coordinator at UCSB’s Center for Innovative Teaching, Research, and Learning inspired me to explore alternative grading approaches for this course. He had passed me a copy of Grading for Growth: A Guide to Alternative Grading Practices That Promote Authentic Learning and Student Engagement in Higher Education, by David Clark & Robert Talbert (also check out the Grading for Growth Substack) and some other awesome case studies / resources, which I dove into for the better portion of August 2023. I decided to implement a version of specifications (specs) grading for EDS 240. Generally speaking, specs grading refers to:\n\n\n“an alternative grading method where instructors create a list of specifications that describe the qualities and characteristics of a successful submission for an assignment. Student work is graded holistically based on those specifications, earning a single mark: “Satisfactory” or “Not Yet”. Students have the chance to use feedback by revisiting and resubmitting for full credit.”\n\n\n-expert from “Grading for Growth: A Guide to Alternative Grading Practices That Promote Authentic Learning and Student Engagement in Higher Education”, by David Clark & Robert Talbert\n\n\nWhy implement something like specs grading? “Traditional” grading (assigning points to one-time assessments and aggregating those points into a letter grade for a course) comes with a variety of challenges (summarized from Grading for Growth):\n\nIt lacks feedback loops – there are (often) no reattempts or revisions of work based on feedback, making it difficult for students to demonstrate (and instructors to assess) learning or growth\nIt disproportionately benefits students who learn fast, or who already have familiarity with the material\nTraditional grades are bias-prone (e.g. awarding participation points, granting deadline extensions)\nIt can be demotivating and discourage students from learning for its own sake (motivation often comes from “chasing the A,” rather than learning and growing)\nIt can promote unhealthy student-instructor relationships\n\nIn EDS 240, students earned either a “Satisfactory” or “Not Yet” mark on each assignment based on whether or not they met all rubric specifications (which are provided alongside each assignment). Students could trade in tokens to revise / resubmit assignments based on instructor feedback, for assignment extensions, or to miss class. Students earned tokens (primarily) by attending discussion section each week. The Grade Tracker below, summarizes the different types of assignments, how students can earn and use tokens, and how to calculate your course grade based on the number of “Satisfactory” grades received:\n\n\n\n\n\n\n\n\n\n\nThe EDS 240 Grade Tracker was inspired by and adapted from the syllabus for BIO SCI E106 Lec A (Processes in Ecology and Evolution, Winter 2022), by Dr. Celia Faiola & Dr. Celia Symons\n\nI would be lying if I said that I wasn’t incredibly nervous to try this out. While all the literature I had explored got me super jazzed about the idea of specs grading, it is quite different than what our students are used to…and change can feel disruptive. I spent a full hour of our first (3hr-long) lecture laying out this grading structure, the accompanying token system, and expectations (and of course, answering many questions).\nSome students were understandably uncertain about the specs grading + token system at the start, but I ultimately received overwhelmingly positive feedback. I’ll share just a few student quotes, pulled from their mid-course and end-of-course self-reflections:\n\n“I really appreciated the alternative grading style as it took a lot of pressure off of me, as I tend to be a bit of perfectionist. So without the number and letter grades on individual assignments, it allowed me to enjoy the work more and potentially create better visualizations in the process.”\n\n\n“I can’t quite put my finger on it, but the tone of the course just really feels like it promotes easy learning. The expectations are certainly high, but are given in a way that allows room for growth at everyone’s particular pace. Even though I feel like I’m spending the same amount of time on this course as others, it doesn’t feel nearly as stressful. It might have to do with the grading. I really enjoy not having my performance pinned to a letter or number grade that can artificially inflate the stakes.”\n\n\n“…As for the tokens and grading system, it was nice to be very clear on what was needed to succeed in the class and be able to decide where to spend tokens as needed at tough parts of the quarter.”\n\n\nFrom my (an instructor’s) perspective, this grading system was really wonderful for a number of reasons:\n\nI did not have to haggle over any points – not even once!! (because points don’t exist as they do in traditional grading systems)\nStudents respected the clear expectations set at the start of the course and in the assignment-specific rubrics – no one expressed frustrations (at least to me) when they needed to use tokens to submit an assignment past the deadline or to revise / resubmit an assignment after receiving a “Not Yet” score\nMany students used tokens for no-questions-asked extensions throughout the quarter. I do think this generally resulted in better overall submissions, rather than rushed and incomplete work. It also meant that I didn’t need to worry about how many points / what percentage to deduct for late submissions.\nStudents demonstrated marked improvements when they chose to revise / resubmit assignments that received a “Not Yet” score\n\n\nImportantly, student success within this grading system relies on thorough instructor feedback.\nWhile I did spend a lot of time providing detailed constructive feedback on assignments, I certainly saved myself time trying to assign / subtract points across assignments. Ultimately, concentrating my efforts on providing constructive criticism was a lot more fun for me and (I hope) much more helpful for students in their learning journeys.\n\n\nMaybe you’re thinking, “this seems like a lot to keep track of…” and to be fair, it sort of is. But a nicely organized Google Sheet helped tremendously in my efforts to keep track of attendance, tokens earned / used, and completed assignments. Students were required to fill out a Google form (also adapted from Drs. Fiola & Symons’ BIO SCI E106 Lec A syllabus) when redeeming tokens, which acted as an “official record” (I did end up making lots of notes in my Google sheet when students used tokens, since this proved to be an easier place for me to reference).\n\n Google Sheets to the rescue! I was able to keep grades and tokens organized with this grade tracker (template).\n\n\n\n3. Determine how to build & organize course materials\nI’m a total sucker for some good organization, so figuring out how I was going to package and present course materials to students was my favorite type of puzzle to solve. I ended up with a Quarto website that houses everything from lecture slides, to assignments, to resources and more.\n\nWebsite layout\nMy goal for the website was to keep things simple, predictable, and also aesthetically-pleasing (for my own happiness, if nothing else). A couple simple design choices that I made, which I felt worked well:\n\nMaterials were organized by week (with each week getting its own page) under the course materials drop-down menu\nWeekly materials followed a predictable format with the same four sections: Pre-class Prep, Lecture Materials, Discussion Materials, and Assignment Reminders\nLectures were divided into multiple slide decks, which forced me to take breaks throughout class (I needed it, and students definitely needed it – 3 hours is long!).\n\n\n\n\n\n\n\n\n\n\n\nScrolling through week 1 materials on the EDS 240 course website\n\n\n\nSlide deck development\nLecture materials – both conceptual and technical – were packaged as individual slide decks. I debated for a while about how to create these, but ultimately opted to build them with Quarto. This was largely driven by the desire to embed the code used in live-coding exercises directly in the slides for easy reference.\nI tend to pack a lot of explanatory information and code in my teaching materials for a couple of reasons:\n\nit makes it easier for students to go back and review content after class, or catch up if they happen to miss a lecture\nthey serve as my own teaching notes and make reviewing materials ahead of teaching a bit easier\nI don’t typically show all slides while teaching – anytime we encounter a slide with code on it, we’ll instead pop over to RStudio for a live-coding exercise\n\nthe slides offer both textual explanations and the code “key,” should students need to refer to it at any point during lecture (e.g. if they fall behind during live-coding, or need to copy a code chunk to move forward because they can’t quite spot the typo)\n\n\n\n\n\n\n\n\n\n\n\n\nAn example of a slide that I wouldn’t necessarily show on screen, but rather move to RStudio to live-code and talk through. The textual content serves as information for students to refer back to, and the embedded code makes copying / pasting easy should anyone fall behind (I always encourage learners to type as much as they can by hand during class).\n\nSome potentially helpful tips:\n\ncreate a stylesheet to maintain a consistent look across all slide decks (it also facilitates faster slide development)\nuse an iPad or second device while teaching – I absolutely do not memorize all the code we cover during class and I need an easy way to reference it while live-coding. My laptop / RStudio will be visible on the screen for students to follow along with, while I reference the slides / code on my separate device\n\n\n Click around the EDS 240 course website if you’re interested in exploring further!\n\n\n\n\n4. Create & manage assignments + provide feedback\n\nCreating assignments\nThis was honestly the part I dreaded the most. While I’ve taught my fair share of workshops, I’ve never had to actually come up with creative and effective ways to assess student learning – it was super intimidating and they took wayyyy longer to put together than I initially thought they would. Some things I considered for each assignment:\n\nwhich of the course learning objectives would each assignment address?\nhow much is a reasonable amount of work to ask of students given the submission schedule (they had ~2 weeks per assignment)?\nhow can we shift assessments to be more learner-centered and less susceptible to plagiarism in the age of generative AI tools (e.g. ChatGPT)?\n\nWhile I won’t go into specific tasks for each assignment (you can check them out on the course website though!), I really enjoyed asking students to both complete a coding task and describe in writing their considerations, workflow, design choices, etc. which (I hoped) would put a greater focus on the decision-making process. I definitely felt a bit of validation when a student responded to the question, “How have your learning goals changed? Have they stayed the same?” (from the mid-course self-reflection):\n\n“I feel that this class has greatly allowed me to progress towards my learning goals, but in a different way than I originally thought. My initial goal in taking this class was to get better at {ggplot2} and other data viz packages. While I have definitely been doing this, I have much more so been progressing in my learning of how to approach data visualization and then using packages like {ggplot2} as a tool to execute this. My learning goals have sort of shifted for the better in a way that I wasn’t really anticipating.”\n\n\n\nManaging assignments\nAll assignments were posted to the course website, and depending on the assignment / task, students were asked to submit completed work either (a) via GitHub Classroom or (b) by submitting rendered or published .qmd files:\n\n(a) GitHub Classroom\nSelf-reflections and parts of the first two homework assignments were distributed and managed using GitHub Classroom, a service that allows educators to create and manage digital classrooms and distribute / track assignments. While there was a bit of a learning curve, I ultimately found it to be a fairly intuitive way to track assignment submissions. In a nutshell, GitHub Classroom allows you to easily distribute assignment repositories (containing template files, starter code, etc.) as forks to all rostered students. I got started by following these instructions (though note the upcoming changes to assignment repos).\n\n\n\n\n\n\n\n\n\n\nA view of the teacher dashboard, where I’m able to access each of my students’ repositories for a particular homework assignment.\n\nFor assignments submitted via GitHub Classroom, we provided feedback largely by copying and commenting on a submitted .qmd file following this workflow:\n\nmake a copy of a submitted .qmd file in the repo\nadd comments such as, # SC feedback: some feedback on code / approach here\npush the new file back to GitHub and prompt students to pull changes\nask students to search for # SC feedback to identify all comments\n\n\n\n\n(b) Submitting rendered or published .qmd files\nThe final course assignment asked students to create a series of visualizations using data of their choosing. This large task was broken down into smaller pieces and spread across all four homework assignments (so students were working on it throughout the entire quarter). For this course-long project, we asked students to create their own GitHub repositories (i.e. not using GitHub Classroom), where they would do all related work. Final projects were submitted either as published Quarto documents (using GitHub Pages) or as published blog posts on student personal websites. Intermediate submissions (i.e. those that were a part of the first three homework assignments) were submitted as rendered HTML files, which we could open and assess via the web browser. We provided feedback for these submissions by opening issues on student repos.\n\n\n\n5. Plan TA responsibilities\nI was so lucky to have an incredible teaching assistant (TA), Sevan Esaian, to collaborate with throughout the quarter. His efforts in the following areas contributed largely to my own success while teaching and student success throughout the course:\n\nLectures & student support\nA major challenge when teaching technical skills (e.g. coding) is assisting students who encounter error messages or other troubleshooting roadblocks while also delivering content at a fair pace. Sevan attended lectures and assisted students who needed an extra set of eyes on troublesome code. We found that it was minimally disruptive for students to meet Sevan, with their laptops, in the back of the classroom when they needed help.\n\n\nDiscussion sections\nSevan also taught weekly discussion sections and took lead on planning much of the content and activities. They went something like this:\n\nWeeks 1-4: I had extra content that I ended up having to cut from lecture, but felt was important for students to think about / get some additional practice on (data wrangling and ggplot practice, writing alt text, intro to customizing ggplot themes). We shuttled this content to discussion section for Sevan to cover.\nWeeks 5-9: These weeks were a mix of introducing additional chart types that hadn’t been covered in lecture, and importantly, having students share in-progress data viz (part of their final course assignment) to receive constructive feedback from peers.\nWeek 10: Students presented their final projects!\n\n\n\nGrading\nSevan and I split grading. I read and wrote responses to student self-reflections, while Sevan graded homework assignments 1-3 (along with any that were revised / resubmitted for a regrade), in accordance with the provided rubrics. I provided written feedback to all students on homework #3 (separate from their grades), since this assignment asked for the first complete draft of all data visualizations which would be submitted as part of their final course assignment. I also chose to grade these final assignments (along with any regrades), in part because I wanted to understand where tweaks could me made for next year, and also because I was super excited to dive into what students had created throughout the quarter."
  },
  {
    "objectID": "posts/2024-04-02-data-viz-course/index.html#other-musings",
    "href": "posts/2024-04-02-data-viz-course/index.html#other-musings",
    "title": "Building (and teaching) a graduate-level data science course",
    "section": "Other musings",
    "text": "Other musings\nThere’s so much more that I learned along the way, but that didn’t quite fit under the above sections. I’m listing a spattering of thoughts here for anyone interested in doing just a bit more reading \n\nA few more tools to consider using\nI already mentioned a fair number of tools that made teaching this course possible (R/RStudio, git/GitHub, GitHub Classrooms, Google Sheets & Forms, Quarto), but there are a few more that are worth noting:\n\nThe MEDS program uses Slack for internal staff / instructor communications, and also for instructor / student communications. Each course has its own dedicated channel (e.g. #eds-240-data-viz) where instructors can share updates, resources, and answer student questions.\nUCSB recently made the switch to Canvas LMS as their default online learning platform – some instructors use this to host course materials, share assignment grades, administer quizzes, etc. I thought I might use it to share grades with students throughout the quarter, but given the Satisfactory / Not Yet nature of assignment grades, it was easier just to communicate that information either via direct messages on Slack or as GitHub issues (on private repos).\nInstructors will eventually need to submit final grades – UCSB uses a web application called EGrades, though I imagine this will differ by institution. Making note of it here, because you’ll want to confirm that you both have access to whatever system your university uses and also understand how to use it (this was my first time, so I had a bit of learning to do!).\n\n\n\nSome things that worked well\n\nSpecs grading! – I would absolutely implement it again (for this course, and / or others). While it does require more work up front (e.g. building clear assignment rubrics, determining exactly what a student needs to do to earn a particular grade in the course), I really do think it allowed me to focus on the more fun (and important) parts of teaching (e.g. providing constructive feedback on assignments, soliciting and acting on student feedback throughout the course)\nRandomly assigning new “learning partners” for each lecture – learning partners were a mix of accountability-buddies, people to help troubleshoot with, and group mates for any in-class activities. I was originally motivated to facilitate student mixing (folks tend to sit in the same seats with the same people throughout the year) and encourage students to help one another problem solve. These were super popular – students consistently requested more opportunities to engage with their learning partners throughout the course. I also received written feedback from non-MEDS students that it made meeting people and integrating with the MEDS cohort much easier.\nProviding the dates that each homework would be assigned and due in the syllabus (and on day 1 of class), which helped everyone plan out their quarters. Students were juggling two other courses, plus work on their capstones (along with any other jobs, personal matters, life).\nPre-, mid-, and end-of-course self reflections were such a great way for me to learn about students (on a professional and personal level) and importantly, encouraged them to both set their own learning goals and check in on their progress towards those goals throughout the quarter. Sending so much appreciation to An Bui, who originally crafted these reflections for her environmental stats course.\nSpreading out work for the final assignment across the entire quarter allowed for lots of feedback (from myself, Sevan, and peers). It also provided more time for students to think deeply about their data, pivot if necessary, and experiment with different graphic forms, design approaches, etc. A few student quotes in response to the question, What is one thing that you really liked about this course, and why? (from the end-of-course self reflection):\n\n\n“I really liked how the project was scaled. It was super useful to start working on homework 4 in the first couple of weeks because by the time that we were ready to really turn something in we had become very familiar with it.”\n\n\n“I really liked how often we showed off our visualizations to the class and the instructors and how the homework assignments built on each other. There were plenty of opportunities for feedback and implementation of that. In most courses, it feels like you submit an assignment, receive feedback, and then don’t touch it again.”\n\n\n“I really enjoyed the way that discussion section was structured. In the first half of the quarter, when we were still learning the basics it was very helpful to learn new/go over concepts in the discussion format. And then, when we started sharing our own visualizations and giving feedback I found that super helpful to understand what did or did not work for an audience unfamiliar with my dataset. It really helped me refine my plots for HW 4”\n\n\n\nSaving all the awesome resources that I came across while building lectures, and adding them to the course website – I was motivated by slightly selfish reasons (I didn’t want to lose track of the bazillion tabs I had open at any given time), but it was also a great place to point students to when they were looking for a place to start or resources on a particular topic.\nAsking students to complete short surveys at the end of each class, which were an easy way for me to quickly assess areas of confusion and seek feedback while things were fresh in everyone’s minds (completing these also counted towards their course grade). I tried my best to address recurring points of confusion by following up with further explanations and resources in the class Slack channel. Survey questions were as follows:\n\nPacing was ___ (multiple choice: too fast, too slow, just right)\nToday, I felt ___ (multiple choice: engaged / focused / excited, disengaged / distracted / not very excited, neutral / somewhere in the middle)\nOne thing I feel that I have a good understanding of now is ___ (short answer)\nOne thing I need more practice with to feel comfortable is ___ (short answer)\nAnything you want us (Sam & TA) to know about your current learning situation? (optional; short answer)\n\n\n\n\nSome things to improve\n\nShorten lecture, or introduce more frequent or longer breaks. I received a number of comments from students in their self reflections that it was often difficult to maintain focus towards the end of our 3 hour-long weekly lecture. I’m a bit reluctant to switch to shorter lectures that meet twice weekly just yet, because from a teaching perspective, the single longer meeting time offers a couple important benefits: (a) it affords me the time to present conceptual content, then demonstrate how to apply it in our coding practice immediately afterwards, (b) as soon as I finished my weekly lecture, I could turn my attention to prepping for the following week (this was particularly helpful this first year, while I was in a constant state of curriculum development). I do see a path where I keep the 3hrs 1x/week schedule by adding in more breaks and streamlining lecture material (see below).\nStreamline / cut lecture content. I almost always overestimate how much content I can fit into any given time period, especially when live-coding / technical instruction is involved – inevitably, there are lots of (great) questions and troubleshooting, and my overzealousness leads to more content than is reasonable. By carefully considering what content to trim and / or rearrange, I’m hopeful I can introduce more frequent or longer breaks.\nCreate template scripts / .qmd files for students to code along in. Each student created their own GitHub repository to house all the code we’d write together throughout the quarter. Overall, I loved this setup – it kept the collective EDS 240 materials organized in one place and was an opportunity to practice repository management and version control. Next time, I’d love to provide template .qmd files with YAMLs and section headers (and maybe even some starter code for particular exercises) already filled out – I think this would help a bit with time management (it takes a bit of time to set these up together) and also help us all stay organized as we move from exercise to exercise throughout class.\nMove some data wrangling to pre-class prep. Year after year, students have requested more in-class data wrangling practice across all courses. I started the quarter off by live-coding my way through all data wrangling (ahead of our in-class data viz practice), but it ultimately took up a lot of really valuable time that I preferred to spend on data viz itself. One student eventually suggested that I provide the wrangling code ahead of time, require students to review it on their own as part of their pre-class prep activities, then reserve ~10min for answering any questions in class. This seemed to work quite well, and I’m excited to try it out a bit more next year. I’ll likely still plan to do a bit of in-class wrangling at the start of the quarter, or if there are particularly new methods that I’d like to introduce.\nAllow myself more time to review materials ahead of each class. This one may seem a bit silly, but it’s an important reminder for my future self! I had built a lot of content before the course began, and I spent most “down time” throughout the quarter trying to prep ahead. This meant that I’d often only start reviewing upcoming lecture materials the Sunday evening before teaching on Monday…each Sunday, I’d tell myself that it was plenty of time, and each Sunday I’d realize that it most certainly was not. I stressed a lot about relearning the content, fixing code errors that I hadn’t caught when I first built the materials, and frantically looking for more resources to better understand things ahead of questions I thought might come up in class. I am totally hopeful that this will get easier each time I teach the course, but did want to note this as an important consideration for anyone who may be teaching something for the first time.\n\n\n\nSome final thoughts on teaching, more generally\n\nTeaching anything requires sooo much learning, both on the subject matter side and importantly on the pedagogical side. I knew that I’d be spending a whole lot of time diving into the (overwhelmingly massive) field of data viz, but the sheer amount of time I spent figuring out exactly how I would lead this course caught me by surprise. I’m honestly really proud of how it all turned out, and I credit that largely to the initial pedagogical planning (please also find the names of those who helped me on this journey in the next section!).\nTeaching is a really vulnerable act! No matter how much prep you do, you’ll get asked questions that you don’t know the answers to, be confronted with situations you don’t quite know how to navigate, and likely make (many) mistakes. I prepped so much, in part because I was scared of making any mistakes (which I of course made anyway). This quarter was a great reminder that transparency is key, and that more often than not, students are really understanding. Taking a bit time to respond to any outstanding questions in the class Slack channel, or explaining the reasoning behind policy decisions went a long way.\nYou’re going to get a lot of feedback. Some of it will certainly help to improve your course and teaching approaches. But it’s also okay to consider then ignore feedback too. Ultimately, we are tasked with thinking really long and hard about what topics to teach, how to teach them, course policies, etc. and we make deliberate decisions in our planning. It’s okay to stand by those decisions. While not teaching-specific, I really appreciated Dorie Clark’s piece on When it’s OK to Ignore Feedback (Harvard Business Review).\nBurnout is real. Find ways to take care of yourself. There was a point around week 7 where I wanted to think about anything other than putting together my next lecture. The remaining topics really excited me, but I was struggling mightily to focus. I stressed for a while about it, but eventually found myself some grace. I spent a couple days working on a completely unrelated project, walked my dog in the middle of the work day, took slightly longer lunch breaks, and maintained my typical workout schedule. It was a much needed change of pace that helped me find my groove again."
  },
  {
    "objectID": "posts/2024-04-02-data-viz-course/index.html#it-takes-a-village",
    "href": "posts/2024-04-02-data-viz-course/index.html#it-takes-a-village",
    "title": "Building (and teaching) a graduate-level data science course",
    "section": "It takes a village",
    "text": "It takes a village\nThis may (definitely) be sappy, but I truly would not be where I am or doing what I’m doing without the support of incredible friends, colleagues, and the online data science community. You all make learning such a joy and I am truly grateful to have so many brilliant educators and thinkers to look up to. There are too many names to list here, but I do want to give shout outs to a few folks who made getting started on this class a bit less intimidating:\nFiguring out where to start is often the hardest part, and finding inspiration from educators who openly shared their materials online was a true blessing. Many many thanks to Meghan Hall and Andrew Heiss, whose courses (CMU 36-315: Statistical Graphics & Visualization & PMAP 8101: Data Visualization with R) provided some much needed inspiration and helped me find my feet. I reference a whole lot of work by Cédric Scherer, but was especially grateful to come across his jam-packed 2-day workshop, Graphic Designs with ggplot2, from rstudio::conf(2022).\nTeaching is truly an art, and I’m lucky to be surrounded by folks who think really hard about how to do it well. Thank you to Nate Emery, who first introduced me to the concept of alternative grading and gave me the resources and encouragement to give it a try myself. To my colleague, dear friend, and biggest hype woman, An Bui, who is both a brilliant data scientist and deeply intentional educator. Adopting her student self-reflection exercises was one of my favorite parts of this course. And of course, to Allison Horst, who has a gift like no other – her approach to teaching has inspired me since my earliest days as a budding data scientist and educator. Find her artwork adorning nearly every page of the course website.\nAnd finally, thank you to Julie Lowndes, for being one of my greatest role models in the open data science movement, and for encouraging me to share my experiences through writing."
  },
  {
    "objectID": "posts/2022-06-22-hello-quarto/index.html",
    "href": "posts/2022-06-22-hello-quarto/index.html",
    "title": "Hello Quarto!",
    "section": "",
    "text": "This blog post is cross-posted from the Openscapes blog."
  },
  {
    "objectID": "posts/2022-06-22-hello-quarto/index.html#hello-quarto-a-quarto-chat-with-nasa-openscapes-co-hosted-with-r-ladies-santa-barbara",
    "href": "posts/2022-06-22-hello-quarto/index.html#hello-quarto-a-quarto-chat-with-nasa-openscapes-co-hosted-with-r-ladies-santa-barbara",
    "title": "Hello Quarto!",
    "section": "Hello Quarto! A Quarto Chat with NASA Openscapes, co-hosted with R-Ladies Santa Barbara",
    "text": "Hello Quarto! A Quarto Chat with NASA Openscapes, co-hosted with R-Ladies Santa Barbara\nOur 6th Openscapes Community Call co-hosted with R-Ladies Santa Barbara featured a “celebrity interview” with NASA Openscapes Mentors Amy Steiker, Catalina Oaida Taglialatela, Aaron Friesz, with J.J. Allaire, lead Quarto developer and CEO of RStudio. The conversation was led by Sam Csik of R-Ladies Santa Barbara.\nQuarto is an open-source scientific and technical publishing system built on Pandoc that allows users to create dynamic documents, presentations, websites, and more. What is especially unique about Quarto is that it works seamlessly across multiple languages -- R, Python, Julia, and ObservableJS -- allowing for easy collaboration among users from different backgrounds and areas of expertise. Conversation was centered around the experiences of NASA researchers from different Distributed Active Archive Centers (DAACs) using Quarto to enable collaborative, data-intensive, open science in the cloud. The recording is on Openscapes YouTube.\nJulie Lowndes is the director of Openscapes, and co-lead of NASA Openscapes with Erin Robinson. Julie is a marine ecologist turned open data scientist because she was so empowered by the R community. Sam asked Julie to describe Quarto - that she had heard it described as “a document, a system, and a way of life”. Julie confirmed -- Quarto is a document in that you can write prose, code, and render outputs like figures and tables all in one place (and also present it in a beautiful way!). She loves that it has a very similar feel to RMarkdown, yet Quarto as a system extends all the RMarkdown functionality that many R users already know and love to additional languages . And finally, this powerful system can become what feels like a way of life because it informs the way she works and collaborates both with herself and others.\n\n“As an R user collaborating with other R users, Quarto refines my RMarkdown experience. As an R user collaborating with Python users, Quarto helps us really reimagine how we work together.” — Julie Lowndes\n\n\n\n\n\n\n\n\n\n\nJulie screenshared a rendered Quarto document alongside the .qmd (“quarto markdown”) file that generated it in RStudio. She pointed out how similar .qmd files look and feel to .rmd (“R markdown”) files, and that there isn’t a rush to make the switch from .rmd to .qmd if you don’t want to -- but the migration is smooth if you do!\nCatalina Oaida Taglialatela is an Applied Science System Engineer at NASA’s Jet Propulsion Laboratory and The Physical Oceanography Distributed Active Archive Center (PO DAAC). Catalina is focused on increasing the number of researchers who use NASA data by helping identify and reduce barriers to science when data and services are in the cloud. She shared that Quarto has enabled her and her teams to curate and organize materials from GitHub repositories in a way that is easy (and oftentimes, less intimidating) for data end-users and/or collaborators to engage with. The NASA Earthdata Cloud Cookbook, a Quarto website built by the NASA Openscapes Mentors, showcases clear step-by-step How-Tos on searching for and using Earthdata, in-depth, targeted tutorials and workshops, and also lessons that are currently under development.\n\n\n\n\n\n\n\n\n\nCatalina commented that sharing works-in-progress was a new concept and certainly one that took some getting used to, but she hopes that this increased transparency will facilitate learning among those who are looking to expand on the work that her NASA Openscapes cohort members are doing.\n\n“Before Openscapes and Quarto, I was hesitant to put unfinished tutorials or ‘how-to’ notes on a public platform, but I’ve really come to appreciate this new open way of collaborating and developing in a way that lets others learn and scale up our efforts. I see Quarto as a tool that enables us to open up and share our process and artifacts in a way that is friendly to the broader data user community.” — Catalina Oaida Taglialatela\n\nAmy Steiker is the Data Service Engineer at the National Snow and Ice Data Center (NSIDC) and specializes in creating data education resources, tools, and data transformation services. If you already love making slides in xaringan, it’s time to check out Quarto presentations! In just a few short weeks, Amy and her team were able to build some really stunning slides using Quarto for her 2021 American Geophysical Union (AGU) talk (check out the slides and use their source code as inspiration for building your own!). She stressed that while it at first seemed daunting to tackle this in a short period of time, the Quarto infrastructure made it really quite simple to generate content from a Jupyter Notebook with Python, preview changes “on the fly” to get slide formatting just right, and finally publishing and presenting it. Amy’s slides were some of the first ever(!) created with Quarto, providing both a challenge and an exciting opportunity to come up with creative solutions. As early adopters, getting the chance to try things out and work alongside J.J. and the Quarto developer team made it possible to push the limits of what was possible, and in some cases, inform Quarto features.\nJ.J. Allaire is the lead developer of Quarto and CEO and co-founder of RStudio, where he is focused on supporting technical publishing, data science, and open science. When asked about his motivation for developing Quarto, J.J. spoke first about RMarkdown -- for 10 years now, RMarkdown has empowered people to publish, communicate, and work reproducibly. For folks who are familiar with the R programming language, it has been an indispensable tool. A large motivation for developing Quarto is the ability to extend the best features of RMarkdown (and more) to Python (and Julia & ObservableJS) users, like the NASA Openscapes Champions. J.J. also discussed how the RStudio Visual Editor (in the IDE) has been developed in concert with Quarto, making it easier to write text and prose - whether you are a seasoned markdown writer or not.\nAaron Friesz is the Science Coordination Lead at NASA’s Land Processes Distributed Active Archive Center (LP DAAC). Aaron provides user needs insights and technical support for archive and distribution, service development, and outreach activities, including developing tutorials, scripts, and presentations. He pointed out that there was an initial learning curve when getting their Quarto infrastructure and development workflow set up, but that it was an awesome opportunity for all NASA Openscapes Champions to learn together and begin collaborating. Now the team has a framework that is open and automatically published (thanks to GitHub Actions) as they continue to iterate. Aaron has seen how Quarto can empower developers from different backgrounds -- using this tool, it’s no longer “R vs. Python” but rather a seamless integration of the two to produce common (awesome) tools. Aaron screenshared what it looks like to use Quarto with Jupyter Notebooks in the NASA Openscapes 2i2c JupyterHub.\n\n\n\n\n\n\n\n\n\nAaron screenshared the _quarto.yml file, created in JupyterLab, which underlies the rendered navigation bar found on the 2022 ECOSTRESS Cloud Workshop website. Aaron pointed out that content for each menu item can be created as markdown files (.md) or Jupyter notebooks (.ipynb), as shown here, or even include RMarkdown (.rmd) and/or Quarto markdown (.qmd) files (among others). This interoperability makes collaboration among different language users working on the same product relatively seamless.\n\nConclusion\nLearning new tools can be intimidating, but just as the NASA Openscapes Mentors demonstrated, it is always more fun with a group of supportive friends and colleagues. We were thrilled to be joined on this community call by an engaged and excited audience full of both new and seasoned Python and R programmers, all looking to explore Quarto together. Following the “celebrity interviews” (editor’s note: Sam is an outstanding interviewer!), panelists and participants moved into Zoom breakout rooms to close out the evening with some R-Ladies Santa Barbara-style networking -- question prompts ranged from icebreakers to casual discussion on what folks were interested in using Quarto for. If you’re looking to get started on your own journey but aren’t quite sure where to begin, be sure to check out the event recording! You’ll find a live demo of the RStudio Visual Editor, how to add automatically-generated citations to your Quarto document by just supplying the DOI, and more."
  },
  {
    "objectID": "posts/2022-06-22-hello-quarto/index.html#additional-resources",
    "href": "posts/2022-06-22-hello-quarto/index.html#additional-resources",
    "title": "Hello Quarto!",
    "section": "Additional Resources",
    "text": "Additional Resources\n\nOpenscapes Quarto Website Tutorial, Openscapes team\nQuarto docs, RStudio\nLinks to install “dailies” of RStudio & Quarto\nReproducible authoring with Quarto slides,youtube, Mine Çetinkaya-Rundel\nWe don’t talk about Quarto, Alison Hill\nNotes on Changing from Rmarkdown/Bookdown to Quarto, Nick Tierney\nPorting a distill blog to quarto, Danielle Navarro\nMine Çetinkaya-Rundel’s Quarto Tip A Day starting June 28\nUpcoming rstudio::conf keynote on Quarto, by Julie Lowndes and Mine Çetinkaya-Rundel!\nUse Quarto with emacs!"
  },
  {
    "objectID": "talks_workshops/2023-08-03-just-enough-css/index.html",
    "href": "talks_workshops/2023-08-03-just-enough-css/index.html",
    "title": "Just enough CSS (and Sass) for data scientists",
    "section": "",
    "text": "slides  source code\n\n\nAbstract\nWhile many of us in the broader data science community may not consider ourselves web developers, tools like Quarto and GitHub have made it more approachable than ever before to create, publish, and share HTML web pages. The default styling of these web pages is pretty sleek – but knowing even just a little bit of CSS can help you transform your reports, websites, blog posts, presentation slides, etc. into personalized and stand-out web products.\nIn this workshop-style Roundtable, we’ll first introduce and interact with some HTML and CSS, the building blocks of all web pages. We’ll then learn about how Sass extends CSS features to help simplify our stylesheets. Finally, we’ll practice writing Sass and CSS to style a Quarto Markdown (.qmd) report.\n\n\nAudience\nThis workshop was delivered to NCEAS residents and staff during the monthly Roundtable seminar. Roundtable is a series of informal presentations and discussions on a wide variety of topics related to current work happening at NCEAS. Sign up for the Google Group to receive announcements of upcoming Roundtables."
  },
  {
    "objectID": "talks_workshops/2022-10-24-quarto-blogs/index.html",
    "href": "talks_workshops/2022-10-24-quarto-blogs/index.html",
    "title": "Adding a blog to your existing Quarto website",
    "section": "",
    "text": "Art by Allison Horst\n\n\n\n blogpost  source code\n\n\nAbstract\nBlogging about your data science adventures has a lot of benefits – it can help you to build your online profile/portfolio, practice your writing and communication skills, stay atop data science trends, solicit feedback from the community, network, learn new skills and/or solidify understanding, combat imposter syndrome, etc. In this workshop, we’ll learn how to add a blog to our Quarto website, customize posts, and (hopefully) get inspired to begin our blogging journeys!\n\n\nAudience\nThis workshop was originally developed for the Master of Environmental Data Science (MEDS) program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis."
  },
  {
    "objectID": "talks_workshops/2022-10-10-customizing-quarto-websites/index.html",
    "href": "talks_workshops/2022-10-10-customizing-quarto-websites/index.html",
    "title": "Customizing Quarto Websites",
    "section": "",
    "text": "slides  source code\n\n\nAbstract\nQuarto provides a user-friendly framework for creating your personal website – but adding your own creative touch can help make yours stand out from the rest. In this workshop, we learn how to (a) add a template to our landing page and update the _quarto.yml file to quickly add fun features/update the overall layout of our website, (b) create a stylesheet and define Sass variables to start modifying the overall theme (colors, fonts, etc) of our site, and (c) define CSS rules to make fine-tuned adjustments to our site’s appearance.\n\n\nAudience\nThis workshop was originally developed for the Master of Environmental Data Science (MEDS) program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis."
  },
  {
    "objectID": "talks_workshops/2023-04-14-functions-forloops/index.html",
    "href": "talks_workshops/2023-04-14-functions-forloops/index.html",
    "title": "An iterative approach to streamlining analytical workflows using functions and for loops",
    "section": "",
    "text": "Art by An Bui\n\n\n\n materials  source code\n\n\nAbstract\nAs your data processing and analyses get longer and more complex, the chances that you’ll benefit from writing functions and/or for loops will also increase. However, whether you’re a new learner or seasoned programmer, it can sometimes feel overwhelming to know exactly where to start – especially when you have an end goal that builds additional complexity/flexibility into your functions and for loops. Taking an iterative approach to building out your code can help make this process clearer, less daunting, and more fun. In this workshop, we’ll use one case study to practice breaking down the function and for loop writing process into manageable, bite-sized steps.\n\n\nAudience\nThis workshop was originally developed for the Master of Environmental Data Science (MEDS) program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis."
  },
  {
    "objectID": "talks_workshops/2019-05-15-intro-to-the-tidyverse/index.html",
    "href": "talks_workshops/2019-05-15-intro-to-the-tidyverse/index.html",
    "title": "Intro to the {tidyverse}",
    "section": "",
    "text": "An Bui and I getting ready to teach our very first R workshop to R-Ladies SB, hosted at NCEAS\n\n\n\n materials  source code\n\n\nAbstract\nIn this live-coding workshop, we teach useful functions for data tidying, wrangling and visualization using tidyverse packages & functions (e.g. dplyr, tidyr, ggplot2, forcats, etc.). This session is intended for R users at any level, whether it’s your first time exploring the tidyverse or if you’re refreshing your wrangling skills!\n\n\nAudience\nMy very first time (co)leading an R-based live-coding workshop(!) and the experience that got me hooked on teaching R / data science 💜, given to R-Ladies Santa Barbara. This workshop was special for a lot of reasons, but the one that stands out the most was learning to overcome the nerves (and general feelings of being too inexperienced), with my very best learning partner by my side. Despite being in separate labs and offices throughout grad school, An and I quickly became data science accountability-buddies, course crashers, and collaborators. I will forever credit my successful journey into the environmental data science / teaching space to this friendship."
  },
  {
    "objectID": "talks_workshops/2022-04-18-intro-to-cloud-computing/index.html",
    "href": "talks_workshops/2022-04-18-intro-to-cloud-computing/index.html",
    "title": "An Intro to Cloud Computing",
    "section": "",
    "text": "slides  source code\n\n\nAbstract\n“The Cloud” is a buzzword we often hear, but maybe don’t quite understand. In this workshop, we’ll learn a bit about what cloud computing means and what it can look like, how to launch a virtual machine (i.e. an instance) using Amazon Web Services (AWS), and how we can leverage more powerful computers (e.g. the cloud) to run computationally-intensive processes in less time.\n\n\nAudience\nThis workshop was originally developed for the Master of Environmental Data Science (MEDS) program, administered by the Bren School of Environmental Science & Management in partnership with the National Center for Ecological Analysis and Synthesis."
  },
  {
    "objectID": "projects/2022-11-23-strava-dashboard/index.html",
    "href": "projects/2022-11-23-strava-dashboard/index.html",
    "title": "Shiny Strava Dashboard",
    "section": "",
    "text": "shiny dashboard  source code\n\n\nIt doesn’t get much better than playing around with data that mean a lot to you. For me, that’s my Strava data (yes, I do recognize that that might sound a bit silly) – I’m fortunate enough to have near-immediate access to some of the greatest hiking trails around (yes, I also recognize that I’m totally biased), and spending my free time romping around our local mountains has been so important for my mental health. So, when I was ready to do my first real deep-dive into learning how to build Shiny apps and dashboards, I knew these were the data I needed to use.\n\nThis is very much an ongoing work in-progress, but the first version included a “Gear Garage” for tracking mileage on my hiking boots and bike, an activity heat map of all recorded hikes, bike rides, and walks, visualizations for exploring activity distance and elevation gain, and an interactive table of the raw data.\nThere are many more visualizations and features I’d love to add (but have been severely lacking the time to do so). I also still manually retrieve new activities using the Strava API via the {rStrava} package, but I hope to automate this in the next version. Stay tuned!\n\n\n\nCathedral Peak, Santa Barbara, CA"
  },
  {
    "objectID": "projects/2023-06-22-openscapes-website-dev/index.html",
    "href": "projects/2023-06-22-openscapes-website-dev/index.html",
    "title": "Openscapes Website",
    "section": "",
    "text": "Openscapes website  source code  blogpost\n\n\nMy first freelancing adventure(!) was spent porting the Openscapes website from {blogdown} to Quarto and redesigning aspects of the website’s layout, styling, and overall functionality. I worked closely with Julie Lowndes (founding director of Openscapes) and Stefanie Butland (core Openscapes team member) to bring their vision to life and it was seriously such a fun project. I wrote a blog post about my experience / some of the highlights. Check it out!\n\n\n\nSanta Ynez River, Santa Barbara, CA, where Julie and I spent time brainstorming ideas for the Openscapes website"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "projects",
    "section": "",
    "text": "Shiny Strava Dashboard\n\n\na personal (and ongoing) side-project to explore my Strava data and learn more about building Shiny apps\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBren Student Data Explorer\n\n\nrefactoring, redesigning & maintaining Bren’s Shiny dashboard for visualizing admissions and career outcome data of current students and recent graduates\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpenscapes Website\n\n\nporting and redesigning the Openscapes website\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "about",
    "section": "",
    "text": "I’m the Data Training Coordinator at the National Center for Ecological Analysis & Synthesis (NCEAS) and a lecturer at the Bren School of Environmental Science & Management, both located at UC Santa Barbara, where I’m working to develop and teach data science training curricula for the Master of Environmental Data Science (MEDS) program and other data science initiatives across NCEAS and UCSB. I am also a co-organizer of R-Ladies Santa Barbara, a local data science group which works to promote gender diversity in the R community.\nMy background is in marine ecology / ecophysiology – I had opportunities to study coral disease in Panama and the Florida Keys as an undergrad, then temperature effects on spiny lobster metabolism and foraging behavior in Santa Barbara for my Masters degree. Since the beginning of my time in STEM, I was totally terrified of all things data / coding / data science, but thanks to a super supportive community and some really rad colleagues / instructors, I found my new path in data science education and I absolutely love it.\n\n\n\n\n\n\n\n\n\n\n\n\nTeaching MEDS students how to build their own personal websites using Quarto! This was especially fun for me, since Quarto was still such a new tool when I first gave this workshop – it meant a lot of discovery and learning on-the-fly alongside our students.\n\nI’m afforded a lot of flexibility in how I teach and what I teach. My focus is on developing and delivering workshop-style classes that supplement the MEDS core curriculum, though I’m now (as of Winter 2024) also teaching one of those core courses, EDS 240: Data Visualization & Communication (I reflect on building and teaching EDS 240 in this blog post). I teach primarily via live-coding (where my computer is hooked up to a screen for participants to see and hear me talk through code in real time as they follow along on their own computers) – this teaching style was invaluable in my own development as a data scientist, and I really believe that, when done well, live-coding can be a game-changing experience for early-career programmers. I am always looking for new ways to make my teaching style and materials more approachable and inclusive for all learners – I try to build my content to be stand-alone resources, both for participants to refer back to and also for those learning on their own time. Feel free to check out / reuse / recycle any of my workshop and course materials."
  },
  {
    "objectID": "about.html#the-profession",
    "href": "about.html#the-profession",
    "title": "about",
    "section": "",
    "text": "I’m the Data Training Coordinator at the National Center for Ecological Analysis & Synthesis (NCEAS) and a lecturer at the Bren School of Environmental Science & Management, both located at UC Santa Barbara, where I’m working to develop and teach data science training curricula for the Master of Environmental Data Science (MEDS) program and other data science initiatives across NCEAS and UCSB. I am also a co-organizer of R-Ladies Santa Barbara, a local data science group which works to promote gender diversity in the R community.\nMy background is in marine ecology / ecophysiology – I had opportunities to study coral disease in Panama and the Florida Keys as an undergrad, then temperature effects on spiny lobster metabolism and foraging behavior in Santa Barbara for my Masters degree. Since the beginning of my time in STEM, I was totally terrified of all things data / coding / data science, but thanks to a super supportive community and some really rad colleagues / instructors, I found my new path in data science education and I absolutely love it.\n\n\n\n\n\n\n\n\n\n\n\n\nTeaching MEDS students how to build their own personal websites using Quarto! This was especially fun for me, since Quarto was still such a new tool when I first gave this workshop – it meant a lot of discovery and learning on-the-fly alongside our students.\n\nI’m afforded a lot of flexibility in how I teach and what I teach. My focus is on developing and delivering workshop-style classes that supplement the MEDS core curriculum, though I’m now (as of Winter 2024) also teaching one of those core courses, EDS 240: Data Visualization & Communication (I reflect on building and teaching EDS 240 in this blog post). I teach primarily via live-coding (where my computer is hooked up to a screen for participants to see and hear me talk through code in real time as they follow along on their own computers) – this teaching style was invaluable in my own development as a data scientist, and I really believe that, when done well, live-coding can be a game-changing experience for early-career programmers. I am always looking for new ways to make my teaching style and materials more approachable and inclusive for all learners – I try to build my content to be stand-alone resources, both for participants to refer back to and also for those learning on their own time. Feel free to check out / reuse / recycle any of my workshop and course materials."
  },
  {
    "objectID": "about.html#the-hobby",
    "href": "about.html#the-hobby",
    "title": "about",
    "section": " the hobby",
    "text": "the hobby\nI feel very fortunate to be doing so many of things that I love a lot right now. That includes my job, but also spending lots of time outdoors. Living in Santa Barbara is a massive privilege and being here means that we have access to both the mountains and the sea, each a few minutes in either direction. It was the ocean that brought me here originally, but most of my free time is now spent on the trails.\n\n\n\n\n\n\n\n\n\n\n\n\nMy right-hand hiking gal, Tallie (aka Bean aka TunaB aka SweetCheeks).\n\nI started recording my hikes (and eventually some other activities) on Strava in late 2020 and finally got around to retrieving my activity data using the {rStrava} package. Below is a heatmap of all my recorded activities made using {leaflet}. It’s challenging to see individual markers at my most frequented trailheads / starting points (toggle markers on using the layer controls in the top right corner), so I’ve recently began building out my own Strava Dashboard (using {shinydashboard}) to make it a bit more interactive and filterable – it’s a work in progress, but a fun side project that I’m excited to continue iterating upon. Huge shout out to Daniel Cullen for his awesome blog post that got me started with my own map.\n\n\n\n\n\n\n\n\n\n\n\n\n For a more interactive experience, click around my Strava dashboard   Source code available on GitHub"
  },
  {
    "objectID": "about.html#the-logo",
    "href": "about.html#the-logo",
    "title": "about",
    "section": " the logo",
    "text": "the logo\nUpdate 2024-12-02: My logo just got a little bit longer! I got married (a little while ago actually! April 22, 2023) and my husband, Brendan, and I decided to hyphenate our names. We’re officially the Shanny-Csik’s and are both excited to join our family names .\nI’m a proud Csik (pronounced “chick” – Hungarian, for the curious), though I spent many of my younger years embarrassed when people (understandably) got it wrong (variations include “sea-sick,” “sick,” “ca-sick,” to name a few) – and many of us know how brutal little kid peers can be when there’s a funny way to mispronounce a name. At some point, I learned to embrace the weird and it became very much a part of my everyday identity. My track coaches and teammates would shout “LET’S GO CSIK” during my events at meets, I signed year books as “Sam [drawing of a chick]” and every handmade card received my “The Csik Press” identifying mark on the back. As I’ve grown older, I’ve taken more care to help colleagues, peers, and strangers learn the correct pronunciation – because if I’m being totally honest, I think my name is pretty darn cool Face Smile Wink. So my first ever real logo is an homage to my earliest attempts at claiming my Csik identity. It may evolve a bit, but for now, it makes me pretty happy. Made using the (free!) Adobe Express logo maker.\n\n\n\n\n\n\n\n\n\n\n\n\nThe back of a handmade birthday card by yours truly (aka ‘The Csik Press’). Thanks, Mom, for sending me pics of these decade+ old treasures whenever you come across them. Artist: Sam Csik. Medium: construction paper, Elmer’s glue. Date: 2010 (apparently)."
  },
  {
    "objectID": "courses/eds-296-shiny/index.html",
    "href": "courses/eds-296-shiny/index.html",
    "title": "EDS 296-1W - Intro to Shiny",
    "section": "",
    "text": "course website  course catalog\n\n\nCourse description\nThese materials accompany the 1-unit, 2-day, hands-on coding workshop, EDS 296-1W - Intro to Shiny, offered through the Bren School of Environmental Science & Management, in partnership with the National Center for Ecological Analysis & Synthesis.\nIn this workshop, students will learn how to build and deploy Shiny applications. The {shiny} package provides a framework that allows R users to build interactive web applications and dashboards, and has become a popular tool for sharing data analyses and data-derived outputs with broad audiences. In this two-part short course, students will learn the fundamentals of reactivity, how to customize an application user interface (UI), best practices and workflows for developing shiny apps, and how to deploy their apps online via RStudio’s hosting service, shinyapps.io.\n\n\n\n\n\n\n\n\n\n\n\n\nWhen is this taught?\nThis course began as a humble, 2-hour long workshop in Winter 2022, when I was just beginning to learn Shiny myself. It was expanded into a credit-bearing 2-day long course in Winter 2023, and I’ve revamped / reorganized materials into their own course website for Winter 2024. You can expect that materials will be reviewed and updated at least once annually, around late fall - early winter."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "posts",
    "section": "",
    "text": "Building (and teaching) a graduate-level data science course\n\n\n\n\n\n\nMEDS\n\n\nR\n\n\ndata-visualization\n\n\npedagogy\n\n\ncurriculum-development\n\n\n\na brain-dump of the many thoughts, processes, and considerations that have been my focus for the past seven(!) months \n\n\n\n\n\nApr 2, 2024\n\n\nSamantha Csik\n\n\n\n\n\n\n\n\n\n\n\n\nPorting the Openscapes website from blogdown to Quarto\n\n\n\n\n\n\nQuarto\n\n\nOpenscapes\n\n\n\nreflections of a first-time freelancer \n\n\n\n\n\nAug 1, 2023\n\n\nSamantha Csik\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a blog to your existing Quarto website\n\n\n\n\n\n\nQuarto\n\n\nR\n\n\nMEDS\n\n\n\nGot a Quarto website, but no blog? We can fix that! \n\n\n\n\n\nOct 24, 2022\n\n\nSamantha Csik\n\n\n\n\n\n\n\n\n\n\n\n\nHello Quarto!\n\n\n\n\n\n\nR-Ladies\n\n\nOpenscapes\n\n\nR\n\n\nPython\n\n\nQuarto\n\n\n\na Quarto Chat with NASA Openscapes, co-hosted with R-Ladies Santa Barbara [orginally published on the Openscapes blog] \n\n\n\n\n\nJun 22, 2022\n\n\nSamantha Csik, Julie Lowndes, Amy Steiker, Catalina Oaida Taglialatela, Aaron Friesz, J.J. Allaire, Erin Robinson, Stefanie Butland\n\n\n\n\n\n\n\n\n\n\n\n\nWhy create presentation slides about blogging when you can just blog about it instead?\n\n\n\n\n\n\ndistill\n\n\nR\n\n\nMEDS\n\n\n\nI started putting together some slides on the whys and hows of blogging using {distill} when I realized…maybe I’ve just found the content for my first blog post?? \n\n\n\n\n\nSep 24, 2021\n\n\nSamantha Csik\n\n\n\n\n\n\nNo matching items"
  }
]